
Test_13_Cloud_Monitoring.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001634  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000040  080016f4  080016f4  000026f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001734  08001734  00003188  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08001734  08001734  00003188  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08001734  08001734  00003188  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001734  08001734  00002734  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001738  08001738  00002738  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000188  20000000  0800173c  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000174  20000188  080018c4  00003188  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200002fc  080018c4  000032fc  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00003188  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000df4  00000000  00000000  000031b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000004a1  00000000  00000000  00003fa4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000170  00000000  00000000  00004448  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000103  00000000  00000000  000045b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00012fc7  00000000  00000000  000046bb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000179e  00000000  00000000  00017682  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0006010a  00000000  00000000  00018e20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00078f2a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c24  00000000  00000000  00078f70  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006f  00000000  00000000  00079b94  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000188 	.word	0x20000188
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080016dc 	.word	0x080016dc

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	2000018c 	.word	0x2000018c
 8000104:	080016dc 	.word	0x080016dc

08000108 <__gnu_thumb1_case_shi>:
 8000108:	b403      	push	{r0, r1}
 800010a:	4671      	mov	r1, lr
 800010c:	0849      	lsrs	r1, r1, #1
 800010e:	0040      	lsls	r0, r0, #1
 8000110:	0049      	lsls	r1, r1, #1
 8000112:	5e09      	ldrsh	r1, [r1, r0]
 8000114:	0049      	lsls	r1, r1, #1
 8000116:	448e      	add	lr, r1
 8000118:	bc03      	pop	{r0, r1}
 800011a:	4770      	bx	lr

0800011c <__udivsi3>:
 800011c:	2200      	movs	r2, #0
 800011e:	0843      	lsrs	r3, r0, #1
 8000120:	428b      	cmp	r3, r1
 8000122:	d374      	bcc.n	800020e <__udivsi3+0xf2>
 8000124:	0903      	lsrs	r3, r0, #4
 8000126:	428b      	cmp	r3, r1
 8000128:	d35f      	bcc.n	80001ea <__udivsi3+0xce>
 800012a:	0a03      	lsrs	r3, r0, #8
 800012c:	428b      	cmp	r3, r1
 800012e:	d344      	bcc.n	80001ba <__udivsi3+0x9e>
 8000130:	0b03      	lsrs	r3, r0, #12
 8000132:	428b      	cmp	r3, r1
 8000134:	d328      	bcc.n	8000188 <__udivsi3+0x6c>
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d30d      	bcc.n	8000158 <__udivsi3+0x3c>
 800013c:	22ff      	movs	r2, #255	@ 0xff
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	ba12      	rev	r2, r2
 8000142:	0c03      	lsrs	r3, r0, #16
 8000144:	428b      	cmp	r3, r1
 8000146:	d302      	bcc.n	800014e <__udivsi3+0x32>
 8000148:	1212      	asrs	r2, r2, #8
 800014a:	0209      	lsls	r1, r1, #8
 800014c:	d065      	beq.n	800021a <__udivsi3+0xfe>
 800014e:	0b03      	lsrs	r3, r0, #12
 8000150:	428b      	cmp	r3, r1
 8000152:	d319      	bcc.n	8000188 <__udivsi3+0x6c>
 8000154:	e000      	b.n	8000158 <__udivsi3+0x3c>
 8000156:	0a09      	lsrs	r1, r1, #8
 8000158:	0bc3      	lsrs	r3, r0, #15
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x46>
 800015e:	03cb      	lsls	r3, r1, #15
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b83      	lsrs	r3, r0, #14
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x52>
 800016a:	038b      	lsls	r3, r1, #14
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b43      	lsrs	r3, r0, #13
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x5e>
 8000176:	034b      	lsls	r3, r1, #13
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0b03      	lsrs	r3, r0, #12
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x6a>
 8000182:	030b      	lsls	r3, r1, #12
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0ac3      	lsrs	r3, r0, #11
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x76>
 800018e:	02cb      	lsls	r3, r1, #11
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a83      	lsrs	r3, r0, #10
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x82>
 800019a:	028b      	lsls	r3, r1, #10
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a43      	lsrs	r3, r0, #9
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x8e>
 80001a6:	024b      	lsls	r3, r1, #9
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0a03      	lsrs	r3, r0, #8
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x9a>
 80001b2:	020b      	lsls	r3, r1, #8
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	d2cd      	bcs.n	8000156 <__udivsi3+0x3a>
 80001ba:	09c3      	lsrs	r3, r0, #7
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xa8>
 80001c0:	01cb      	lsls	r3, r1, #7
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0983      	lsrs	r3, r0, #6
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xb4>
 80001cc:	018b      	lsls	r3, r1, #6
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0943      	lsrs	r3, r0, #5
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xc0>
 80001d8:	014b      	lsls	r3, r1, #5
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0903      	lsrs	r3, r0, #4
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xcc>
 80001e4:	010b      	lsls	r3, r1, #4
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	08c3      	lsrs	r3, r0, #3
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xd8>
 80001f0:	00cb      	lsls	r3, r1, #3
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0883      	lsrs	r3, r0, #2
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xe4>
 80001fc:	008b      	lsls	r3, r1, #2
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0843      	lsrs	r3, r0, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xf0>
 8000208:	004b      	lsls	r3, r1, #1
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	1a41      	subs	r1, r0, r1
 8000210:	d200      	bcs.n	8000214 <__udivsi3+0xf8>
 8000212:	4601      	mov	r1, r0
 8000214:	4152      	adcs	r2, r2
 8000216:	4610      	mov	r0, r2
 8000218:	4770      	bx	lr
 800021a:	e7ff      	b.n	800021c <__udivsi3+0x100>
 800021c:	b501      	push	{r0, lr}
 800021e:	2000      	movs	r0, #0
 8000220:	f000 f806 	bl	8000230 <__aeabi_idiv0>
 8000224:	bd02      	pop	{r1, pc}
 8000226:	46c0      	nop			@ (mov r8, r8)

08000228 <__aeabi_uidivmod>:
 8000228:	2900      	cmp	r1, #0
 800022a:	d0f7      	beq.n	800021c <__udivsi3+0x100>
 800022c:	e776      	b.n	800011c <__udivsi3>
 800022e:	4770      	bx	lr

08000230 <__aeabi_idiv0>:
 8000230:	4770      	bx	lr
 8000232:	46c0      	nop			@ (mov r8, r8)

08000234 <Delay_ms>:
unsigned char command_ESP_9[9]="\r\n\r\n";
unsigned char command_ESP_10[20]="AT+CIPCLOSE\r\n";
unsigned char data_string[8];

void Delay_ms(int delay)
{
 8000234:	b580      	push	{r7, lr}
 8000236:	b084      	sub	sp, #16
 8000238:	af00      	add	r7, sp, #0
 800023a:	6078      	str	r0, [r7, #4]
	int i;
	for (;delay>0;delay--)
 800023c:	e00c      	b.n	8000258 <Delay_ms+0x24>
	{
		for(i=0;i<3195;i++)
 800023e:	2300      	movs	r3, #0
 8000240:	60fb      	str	r3, [r7, #12]
 8000242:	e002      	b.n	800024a <Delay_ms+0x16>
 8000244:	68fb      	ldr	r3, [r7, #12]
 8000246:	3301      	adds	r3, #1
 8000248:	60fb      	str	r3, [r7, #12]
 800024a:	68fb      	ldr	r3, [r7, #12]
 800024c:	4a06      	ldr	r2, [pc, #24]	@ (8000268 <Delay_ms+0x34>)
 800024e:	4293      	cmp	r3, r2
 8000250:	ddf8      	ble.n	8000244 <Delay_ms+0x10>
	for (;delay>0;delay--)
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	3b01      	subs	r3, #1
 8000256:	607b      	str	r3, [r7, #4]
 8000258:	687b      	ldr	r3, [r7, #4]
 800025a:	2b00      	cmp	r3, #0
 800025c:	dcef      	bgt.n	800023e <Delay_ms+0xa>
		{

		}
	}
}
 800025e:	46c0      	nop			@ (mov r8, r8)
 8000260:	46c0      	nop			@ (mov r8, r8)
 8000262:	46bd      	mov	sp, r7
 8000264:	b004      	add	sp, #16
 8000266:	bd80      	pop	{r7, pc}
 8000268:	00000c7a 	.word	0x00000c7a

0800026c <__io_putchar>:
void Thing_Speak_Command_Start(void);
void Data_Commands();
void Init_ESP8266(void);

int __io_putchar(int ch)
{
 800026c:	b580      	push	{r7, lr}
 800026e:	b082      	sub	sp, #8
 8000270:	af00      	add	r7, sp, #0
 8000272:	6078      	str	r0, [r7, #4]
	UART1_Write(ch);
 8000274:	687b      	ldr	r3, [r7, #4]
 8000276:	b2db      	uxtb	r3, r3
 8000278:	0018      	movs	r0, r3
 800027a:	f000 f87d 	bl	8000378 <UART1_Write>
	return ch;
 800027e:	687b      	ldr	r3, [r7, #4]
}
 8000280:	0018      	movs	r0, r3
 8000282:	46bd      	mov	sp, r7
 8000284:	b002      	add	sp, #8
 8000286:	bd80      	pop	{r7, pc}

08000288 <main>:

int main(void)
{
 8000288:	b580      	push	{r7, lr}
 800028a:	b082      	sub	sp, #8
 800028c:	af00      	add	r7, sp, #0
	 char data;
	 unsigned int Data_Adc;
	 //UART INITIALIZATION
	 UART1_Init();
 800028e:	f000 f83d 	bl	800030c <UART1_Init>
	 //ESP8266 INITIALIZTION
	 Init_ESP8266();
 8000292:	f000 f98d 	bl	80005b0 <Init_ESP8266>
	 //WIFI ACCOUNT & PASSWORD
	 Wifi_acc();
 8000296:	f000 f917 	bl	80004c8 <Wifi_acc>
	 //THINGSPEAK COMMAND
	 Thing_Speak_Command_Start();
 800029a:	f000 f929 	bl	80004f0 <Thing_Speak_Command_Start>
	 Delay_ms(500);
 800029e:	23fa      	movs	r3, #250	@ 0xfa
 80002a0:	005b      	lsls	r3, r3, #1
 80002a2:	0018      	movs	r0, r3
 80002a4:	f7ff ffc6 	bl	8000234 <Delay_ms>
	 Data_Adc= 30;
 80002a8:	231e      	movs	r3, #30
 80002aa:	607b      	str	r3, [r7, #4]
	 //INTEGER TO ASCII
	 integer_to_ascii(Data_Adc,data_string);
 80002ac:	4a15      	ldr	r2, [pc, #84]	@ (8000304 <main+0x7c>)
 80002ae:	687b      	ldr	r3, [r7, #4]
 80002b0:	0011      	movs	r1, r2
 80002b2:	0018      	movs	r0, r3
 80002b4:	f000 f878 	bl	80003a8 <integer_to_ascii>
	 //DATA COMMAND
	 Data_Commands();
 80002b8:	f000 f930 	bl	800051c <Data_Commands>
	 Delay_ms(500);
 80002bc:	23fa      	movs	r3, #250	@ 0xfa
 80002be:	005b      	lsls	r3, r3, #1
 80002c0:	0018      	movs	r0, r3
 80002c2:	f7ff ffb7 	bl	8000234 <Delay_ms>
	 Thing_Speak_Command_Start();
 80002c6:	f000 f913 	bl	80004f0 <Thing_Speak_Command_Start>
	 Delay_ms(500);
 80002ca:	23fa      	movs	r3, #250	@ 0xfa
 80002cc:	005b      	lsls	r3, r3, #1
 80002ce:	0018      	movs	r0, r3
 80002d0:	f7ff ffb0 	bl	8000234 <Delay_ms>
	 Data_Adc= 60;
 80002d4:	233c      	movs	r3, #60	@ 0x3c
 80002d6:	607b      	str	r3, [r7, #4]
	 //INTEGER TO ASCII
	 integer_to_ascii(Data_Adc,data_string);
 80002d8:	4a0a      	ldr	r2, [pc, #40]	@ (8000304 <main+0x7c>)
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	0011      	movs	r1, r2
 80002de:	0018      	movs	r0, r3
 80002e0:	f000 f862 	bl	80003a8 <integer_to_ascii>
	 //DATA COMMAND
	 Data_Commands();
 80002e4:	f000 f91a 	bl	800051c <Data_Commands>
	 Delay_ms(500);
 80002e8:	23fa      	movs	r3, #250	@ 0xfa
 80002ea:	005b      	lsls	r3, r3, #1
 80002ec:	0018      	movs	r0, r3
 80002ee:	f7ff ffa1 	bl	8000234 <Delay_ms>
	 printf("\n END \n");
 80002f2:	4b05      	ldr	r3, [pc, #20]	@ (8000308 <main+0x80>)
 80002f4:	0018      	movs	r0, r3
 80002f6:	f000 fb5b 	bl	80009b0 <puts>
 80002fa:	2300      	movs	r3, #0
}
 80002fc:	0018      	movs	r0, r3
 80002fe:	46bd      	mov	sp, r7
 8000300:	b002      	add	sp, #8
 8000302:	bd80      	pop	{r7, pc}
 8000304:	200001a4 	.word	0x200001a4
 8000308:	080016f4 	.word	0x080016f4

0800030c <UART1_Init>:

void UART1_Init(void)
{
 800030c:	b580      	push	{r7, lr}
 800030e:	af00      	add	r7, sp, #0
	/*Enable the clock for GPIOA, GPIOB*/
	RCC->AHBENR 	|= ((1U<<17) | (1U<<18));
 8000310:	4b16      	ldr	r3, [pc, #88]	@ (800036c <UART1_Init+0x60>)
 8000312:	695a      	ldr	r2, [r3, #20]
 8000314:	4b15      	ldr	r3, [pc, #84]	@ (800036c <UART1_Init+0x60>)
 8000316:	21c0      	movs	r1, #192	@ 0xc0
 8000318:	02c9      	lsls	r1, r1, #11
 800031a:	430a      	orrs	r2, r1
 800031c:	615a      	str	r2, [r3, #20]
	RCC->APB2ENR 	|= (1U<<14);		//Enabling UART1
 800031e:	4b13      	ldr	r3, [pc, #76]	@ (800036c <UART1_Init+0x60>)
 8000320:	699a      	ldr	r2, [r3, #24]
 8000322:	4b12      	ldr	r3, [pc, #72]	@ (800036c <UART1_Init+0x60>)
 8000324:	2180      	movs	r1, #128	@ 0x80
 8000326:	01c9      	lsls	r1, r1, #7
 8000328:	430a      	orrs	r2, r1
 800032a:	619a      	str	r2, [r3, #24]
	GPIOB->MODER	|= (0x0000A000);	//PB6 & PB7 configure a Alternate function.
 800032c:	4b10      	ldr	r3, [pc, #64]	@ (8000370 <UART1_Init+0x64>)
 800032e:	681a      	ldr	r2, [r3, #0]
 8000330:	4b0f      	ldr	r3, [pc, #60]	@ (8000370 <UART1_Init+0x64>)
 8000332:	21a0      	movs	r1, #160	@ 0xa0
 8000334:	0209      	lsls	r1, r1, #8
 8000336:	430a      	orrs	r2, r1
 8000338:	601a      	str	r2, [r3, #0]
	GPIOA->MODER	|= (0x00000400);	//PA5 Configure as output
 800033a:	2390      	movs	r3, #144	@ 0x90
 800033c:	05db      	lsls	r3, r3, #23
 800033e:	681a      	ldr	r2, [r3, #0]
 8000340:	2390      	movs	r3, #144	@ 0x90
 8000342:	05db      	lsls	r3, r3, #23
 8000344:	2180      	movs	r1, #128	@ 0x80
 8000346:	00c9      	lsls	r1, r1, #3
 8000348:	430a      	orrs	r2, r1
 800034a:	601a      	str	r2, [r3, #0]
	GPIOB->AFR[0]	|= (0x00000000);	//PB6 and PB7 AFR Low configured as AF0 as per data sheet
 800034c:	4a08      	ldr	r2, [pc, #32]	@ (8000370 <UART1_Init+0x64>)
 800034e:	4b08      	ldr	r3, [pc, #32]	@ (8000370 <UART1_Init+0x64>)
 8000350:	6a12      	ldr	r2, [r2, #32]
 8000352:	621a      	str	r2, [r3, #32]
	/*Configuring UART*/
	USART1->CR1 	|= (0x0000000D);	//Enabling UE,TE,RE
 8000354:	4b07      	ldr	r3, [pc, #28]	@ (8000374 <UART1_Init+0x68>)
 8000356:	681a      	ldr	r2, [r3, #0]
 8000358:	4b06      	ldr	r3, [pc, #24]	@ (8000374 <UART1_Init+0x68>)
 800035a:	210d      	movs	r1, #13
 800035c:	430a      	orrs	r2, r1
 800035e:	601a      	str	r2, [r3, #0]
	USART1->BRR		 = 0x008B;			//Baud rate as 115200
 8000360:	4b04      	ldr	r3, [pc, #16]	@ (8000374 <UART1_Init+0x68>)
 8000362:	228b      	movs	r2, #139	@ 0x8b
 8000364:	60da      	str	r2, [r3, #12]
}
 8000366:	46c0      	nop			@ (mov r8, r8)
 8000368:	46bd      	mov	sp, r7
 800036a:	bd80      	pop	{r7, pc}
 800036c:	40021000 	.word	0x40021000
 8000370:	48000400 	.word	0x48000400
 8000374:	40013800 	.word	0x40013800

08000378 <UART1_Write>:
	while(!(USART1->ISR&0x0020)){}
	return USART1->RDR;
}

void UART1_Write(char data)
{
 8000378:	b580      	push	{r7, lr}
 800037a:	b082      	sub	sp, #8
 800037c:	af00      	add	r7, sp, #0
 800037e:	0002      	movs	r2, r0
 8000380:	1dfb      	adds	r3, r7, #7
 8000382:	701a      	strb	r2, [r3, #0]
	while(!(USART1->ISR&0x0080)){}
 8000384:	46c0      	nop			@ (mov r8, r8)
 8000386:	4b07      	ldr	r3, [pc, #28]	@ (80003a4 <UART1_Write+0x2c>)
 8000388:	69db      	ldr	r3, [r3, #28]
 800038a:	2280      	movs	r2, #128	@ 0x80
 800038c:	4013      	ands	r3, r2
 800038e:	d0fa      	beq.n	8000386 <UART1_Write+0xe>
	USART1->TDR = (data&0xff);
 8000390:	4a04      	ldr	r2, [pc, #16]	@ (80003a4 <UART1_Write+0x2c>)
 8000392:	1dfb      	adds	r3, r7, #7
 8000394:	781b      	ldrb	r3, [r3, #0]
 8000396:	b29b      	uxth	r3, r3
 8000398:	8513      	strh	r3, [r2, #40]	@ 0x28
}
 800039a:	46c0      	nop			@ (mov r8, r8)
 800039c:	46bd      	mov	sp, r7
 800039e:	b002      	add	sp, #8
 80003a0:	bd80      	pop	{r7, pc}
 80003a2:	46c0      	nop			@ (mov r8, r8)
 80003a4:	40013800 	.word	0x40013800

080003a8 <integer_to_ascii>:

void integer_to_ascii(unsigned int Val, unsigned char *str)
{
 80003a8:	b580      	push	{r7, lr}
 80003aa:	b082      	sub	sp, #8
 80003ac:	af00      	add	r7, sp, #0
 80003ae:	6078      	str	r0, [r7, #4]
 80003b0:	6039      	str	r1, [r7, #0]
    str[0] = Val/1000 + 0x30;
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	22fa      	movs	r2, #250	@ 0xfa
 80003b6:	0091      	lsls	r1, r2, #2
 80003b8:	0018      	movs	r0, r3
 80003ba:	f7ff feaf 	bl	800011c <__udivsi3>
 80003be:	0003      	movs	r3, r0
 80003c0:	b2db      	uxtb	r3, r3
 80003c2:	3330      	adds	r3, #48	@ 0x30
 80003c4:	b2da      	uxtb	r2, r3
 80003c6:	683b      	ldr	r3, [r7, #0]
 80003c8:	701a      	strb	r2, [r3, #0]
    Val    = Val%1000;
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	22fa      	movs	r2, #250	@ 0xfa
 80003ce:	0091      	lsls	r1, r2, #2
 80003d0:	0018      	movs	r0, r3
 80003d2:	f7ff ff29 	bl	8000228 <__aeabi_uidivmod>
 80003d6:	000b      	movs	r3, r1
 80003d8:	607b      	str	r3, [r7, #4]
	str[1] = Val/100 + 0x30;
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	2164      	movs	r1, #100	@ 0x64
 80003de:	0018      	movs	r0, r3
 80003e0:	f7ff fe9c 	bl	800011c <__udivsi3>
 80003e4:	0003      	movs	r3, r0
 80003e6:	b2da      	uxtb	r2, r3
 80003e8:	683b      	ldr	r3, [r7, #0]
 80003ea:	3301      	adds	r3, #1
 80003ec:	3230      	adds	r2, #48	@ 0x30
 80003ee:	b2d2      	uxtb	r2, r2
 80003f0:	701a      	strb	r2, [r3, #0]
	Val    = Val%100;
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	2164      	movs	r1, #100	@ 0x64
 80003f6:	0018      	movs	r0, r3
 80003f8:	f7ff ff16 	bl	8000228 <__aeabi_uidivmod>
 80003fc:	000b      	movs	r3, r1
 80003fe:	607b      	str	r3, [r7, #4]
	str[2] = Val/10 + 0x30;
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	210a      	movs	r1, #10
 8000404:	0018      	movs	r0, r3
 8000406:	f7ff fe89 	bl	800011c <__udivsi3>
 800040a:	0003      	movs	r3, r0
 800040c:	b2da      	uxtb	r2, r3
 800040e:	683b      	ldr	r3, [r7, #0]
 8000410:	3302      	adds	r3, #2
 8000412:	3230      	adds	r2, #48	@ 0x30
 8000414:	b2d2      	uxtb	r2, r2
 8000416:	701a      	strb	r2, [r3, #0]
	str[3] = Val%10 + 0x30;
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	210a      	movs	r1, #10
 800041c:	0018      	movs	r0, r3
 800041e:	f7ff ff03 	bl	8000228 <__aeabi_uidivmod>
 8000422:	000b      	movs	r3, r1
 8000424:	b2da      	uxtb	r2, r3
 8000426:	683b      	ldr	r3, [r7, #0]
 8000428:	3303      	adds	r3, #3
 800042a:	3230      	adds	r2, #48	@ 0x30
 800042c:	b2d2      	uxtb	r2, r2
 800042e:	701a      	strb	r2, [r3, #0]
	str[4] = '\0';
 8000430:	683b      	ldr	r3, [r7, #0]
 8000432:	3304      	adds	r3, #4
 8000434:	2200      	movs	r2, #0
 8000436:	701a      	strb	r2, [r3, #0]
}
 8000438:	46c0      	nop			@ (mov r8, r8)
 800043a:	46bd      	mov	sp, r7
 800043c:	b002      	add	sp, #8
 800043e:	bd80      	pop	{r7, pc}

08000440 <Basic_Commands>:

void Basic_Commands(void)
{
 8000440:	b580      	push	{r7, lr}
 8000442:	af00      	add	r7, sp, #0
    //"AT\r\n"; // BASIC
	printf("%s",command_basic_1);
 8000444:	4a0c      	ldr	r2, [pc, #48]	@ (8000478 <Basic_Commands+0x38>)
 8000446:	4b0d      	ldr	r3, [pc, #52]	@ (800047c <Basic_Commands+0x3c>)
 8000448:	0011      	movs	r1, r2
 800044a:	0018      	movs	r0, r3
 800044c:	f000 fa4a 	bl	80008e4 <iprintf>
	Delay_ms(500);
 8000450:	23fa      	movs	r3, #250	@ 0xfa
 8000452:	005b      	lsls	r3, r3, #1
 8000454:	0018      	movs	r0, r3
 8000456:	f7ff feed 	bl	8000234 <Delay_ms>
	//"AT+RST\r\n";//BASIC
	printf("%s",command_basic_2);
 800045a:	4a09      	ldr	r2, [pc, #36]	@ (8000480 <Basic_Commands+0x40>)
 800045c:	4b07      	ldr	r3, [pc, #28]	@ (800047c <Basic_Commands+0x3c>)
 800045e:	0011      	movs	r1, r2
 8000460:	0018      	movs	r0, r3
 8000462:	f000 fa3f 	bl	80008e4 <iprintf>
	Delay_ms(1000);
 8000466:	23fa      	movs	r3, #250	@ 0xfa
 8000468:	009b      	lsls	r3, r3, #2
 800046a:	0018      	movs	r0, r3
 800046c:	f7ff fee2 	bl	8000234 <Delay_ms>
}
 8000470:	46c0      	nop			@ (mov r8, r8)
 8000472:	46bd      	mov	sp, r7
 8000474:	bd80      	pop	{r7, pc}
 8000476:	46c0      	nop			@ (mov r8, r8)
 8000478:	20000000 	.word	0x20000000
 800047c:	080016fc 	.word	0x080016fc
 8000480:	20000008 	.word	0x20000008

08000484 <Wifi_Conn_Commands>:

void Wifi_Conn_Commands(void)
{
 8000484:	b580      	push	{r7, lr}
 8000486:	af00      	add	r7, sp, #0
	//"AT+CWMODE=1\r\n";//WIFI
	printf("%s",command_ESP_1);
 8000488:	4a0c      	ldr	r2, [pc, #48]	@ (80004bc <Wifi_Conn_Commands+0x38>)
 800048a:	4b0d      	ldr	r3, [pc, #52]	@ (80004c0 <Wifi_Conn_Commands+0x3c>)
 800048c:	0011      	movs	r1, r2
 800048e:	0018      	movs	r0, r3
 8000490:	f000 fa28 	bl	80008e4 <iprintf>
	Delay_ms(500);
 8000494:	23fa      	movs	r3, #250	@ 0xfa
 8000496:	005b      	lsls	r3, r3, #1
 8000498:	0018      	movs	r0, r3
 800049a:	f7ff fecb 	bl	8000234 <Delay_ms>
	//"AT+CWQAP\r\n";//WIFI
	printf("%s",command_ESP_2);
 800049e:	4a09      	ldr	r2, [pc, #36]	@ (80004c4 <Wifi_Conn_Commands+0x40>)
 80004a0:	4b07      	ldr	r3, [pc, #28]	@ (80004c0 <Wifi_Conn_Commands+0x3c>)
 80004a2:	0011      	movs	r1, r2
 80004a4:	0018      	movs	r0, r3
 80004a6:	f000 fa1d 	bl	80008e4 <iprintf>
	Delay_ms(500);
 80004aa:	23fa      	movs	r3, #250	@ 0xfa
 80004ac:	005b      	lsls	r3, r3, #1
 80004ae:	0018      	movs	r0, r3
 80004b0:	f7ff fec0 	bl	8000234 <Delay_ms>
}
 80004b4:	46c0      	nop			@ (mov r8, r8)
 80004b6:	46bd      	mov	sp, r7
 80004b8:	bd80      	pop	{r7, pc}
 80004ba:	46c0      	nop			@ (mov r8, r8)
 80004bc:	20000014 	.word	0x20000014
 80004c0:	080016fc 	.word	0x080016fc
 80004c4:	20000024 	.word	0x20000024

080004c8 <Wifi_acc>:

void Wifi_acc(void)
{
 80004c8:	b580      	push	{r7, lr}
 80004ca:	af00      	add	r7, sp, #0
   //"AT+CWJAP=\"WiFI Name \",\"Password\"\r\n"; // WIFI ACC;
   printf("%s",command_ESP_3);
 80004cc:	4a06      	ldr	r2, [pc, #24]	@ (80004e8 <Wifi_acc+0x20>)
 80004ce:	4b07      	ldr	r3, [pc, #28]	@ (80004ec <Wifi_acc+0x24>)
 80004d0:	0011      	movs	r1, r2
 80004d2:	0018      	movs	r0, r3
 80004d4:	f000 fa06 	bl	80008e4 <iprintf>
   Delay_ms(8000);
 80004d8:	23fa      	movs	r3, #250	@ 0xfa
 80004da:	015b      	lsls	r3, r3, #5
 80004dc:	0018      	movs	r0, r3
 80004de:	f7ff fea9 	bl	8000234 <Delay_ms>
}
 80004e2:	46c0      	nop			@ (mov r8, r8)
 80004e4:	46bd      	mov	sp, r7
 80004e6:	bd80      	pop	{r7, pc}
 80004e8:	20000050 	.word	0x20000050
 80004ec:	080016fc 	.word	0x080016fc

080004f0 <Thing_Speak_Command_Start>:


void Thing_Speak_Command_Start(void)
{
 80004f0:	b580      	push	{r7, lr}
 80004f2:	af00      	add	r7, sp, #0
	//"AT+CWDHCP=1,1\r\n";//THINGS SPEAK
	printf("%s",command_ESP_4);
 80004f4:	4a06      	ldr	r2, [pc, #24]	@ (8000510 <Thing_Speak_Command_Start+0x20>)
 80004f6:	4b07      	ldr	r3, [pc, #28]	@ (8000514 <Thing_Speak_Command_Start+0x24>)
 80004f8:	0011      	movs	r1, r2
 80004fa:	0018      	movs	r0, r3
 80004fc:	f000 f9f2 	bl	80008e4 <iprintf>
	Delay_ms(5000);
 8000500:	4b05      	ldr	r3, [pc, #20]	@ (8000518 <Thing_Speak_Command_Start+0x28>)
 8000502:	0018      	movs	r0, r3
 8000504:	f7ff fe96 	bl	8000234 <Delay_ms>
}
 8000508:	46c0      	nop			@ (mov r8, r8)
 800050a:	46bd      	mov	sp, r7
 800050c:	bd80      	pop	{r7, pc}
 800050e:	46c0      	nop			@ (mov r8, r8)
 8000510:	20000034 	.word	0x20000034
 8000514:	080016fc 	.word	0x080016fc
 8000518:	00001388 	.word	0x00001388

0800051c <Data_Commands>:

void Data_Commands()
{
 800051c:	b580      	push	{r7, lr}
 800051e:	af00      	add	r7, sp, #0
	//"AT+CIPSTART=\"TCP\",\"184.106.153.149\",80\r\n";
	printf("%s",command_ESP_5);
 8000520:	4a1b      	ldr	r2, [pc, #108]	@ (8000590 <Data_Commands+0x74>)
 8000522:	4b1c      	ldr	r3, [pc, #112]	@ (8000594 <Data_Commands+0x78>)
 8000524:	0011      	movs	r1, r2
 8000526:	0018      	movs	r0, r3
 8000528:	f000 f9dc 	bl	80008e4 <iprintf>
	Delay_ms(5000);
 800052c:	4b1a      	ldr	r3, [pc, #104]	@ (8000598 <Data_Commands+0x7c>)
 800052e:	0018      	movs	r0, r3
 8000530:	f7ff fe80 	bl	8000234 <Delay_ms>
	//"AT+CIPSEND=64\r\n";
	printf("%s",command_ESP_6);
 8000534:	4a19      	ldr	r2, [pc, #100]	@ (800059c <Data_Commands+0x80>)
 8000536:	4b17      	ldr	r3, [pc, #92]	@ (8000594 <Data_Commands+0x78>)
 8000538:	0011      	movs	r1, r2
 800053a:	0018      	movs	r0, r3
 800053c:	f000 f9d2 	bl	80008e4 <iprintf>
    Delay_ms(5000);
 8000540:	4b15      	ldr	r3, [pc, #84]	@ (8000598 <Data_Commands+0x7c>)
 8000542:	0018      	movs	r0, r3
 8000544:	f7ff fe76 	bl	8000234 <Delay_ms>
    //"GET /update?api_key=J4467UDKM1YL0EXH&field1=";
	printf("%s",command_ESP_7);
 8000548:	4a15      	ldr	r2, [pc, #84]	@ (80005a0 <Data_Commands+0x84>)
 800054a:	4b12      	ldr	r3, [pc, #72]	@ (8000594 <Data_Commands+0x78>)
 800054c:	0011      	movs	r1, r2
 800054e:	0018      	movs	r0, r3
 8000550:	f000 f9c8 	bl	80008e4 <iprintf>

	printf("%s",data_string);
 8000554:	4a13      	ldr	r2, [pc, #76]	@ (80005a4 <Data_Commands+0x88>)
 8000556:	4b0f      	ldr	r3, [pc, #60]	@ (8000594 <Data_Commands+0x78>)
 8000558:	0011      	movs	r1, r2
 800055a:	0018      	movs	r0, r3
 800055c:	f000 f9c2 	bl	80008e4 <iprintf>
	//"\r\n\r\n";
	printf("%s",command_ESP_9);
 8000560:	4a11      	ldr	r2, [pc, #68]	@ (80005a8 <Data_Commands+0x8c>)
 8000562:	4b0c      	ldr	r3, [pc, #48]	@ (8000594 <Data_Commands+0x78>)
 8000564:	0011      	movs	r1, r2
 8000566:	0018      	movs	r0, r3
 8000568:	f000 f9bc 	bl	80008e4 <iprintf>
	Delay_ms(1000);
 800056c:	23fa      	movs	r3, #250	@ 0xfa
 800056e:	009b      	lsls	r3, r3, #2
 8000570:	0018      	movs	r0, r3
 8000572:	f7ff fe5f 	bl	8000234 <Delay_ms>
	//"AT+CIPCLOSE\r\n"
	printf("%s",command_ESP_10);
 8000576:	4a0d      	ldr	r2, [pc, #52]	@ (80005ac <Data_Commands+0x90>)
 8000578:	4b06      	ldr	r3, [pc, #24]	@ (8000594 <Data_Commands+0x78>)
 800057a:	0011      	movs	r1, r2
 800057c:	0018      	movs	r0, r3
 800057e:	f000 f9b1 	bl	80008e4 <iprintf>
	Delay_ms(5000);
 8000582:	4b05      	ldr	r3, [pc, #20]	@ (8000598 <Data_Commands+0x7c>)
 8000584:	0018      	movs	r0, r3
 8000586:	f7ff fe55 	bl	8000234 <Delay_ms>
}
 800058a:	46c0      	nop			@ (mov r8, r8)
 800058c:	46bd      	mov	sp, r7
 800058e:	bd80      	pop	{r7, pc}
 8000590:	20000084 	.word	0x20000084
 8000594:	080016fc 	.word	0x080016fc
 8000598:	00001388 	.word	0x00001388
 800059c:	200000b8 	.word	0x200000b8
 80005a0:	200000cc 	.word	0x200000cc
 80005a4:	200001a4 	.word	0x200001a4
 80005a8:	2000010c 	.word	0x2000010c
 80005ac:	20000118 	.word	0x20000118

080005b0 <Init_ESP8266>:

void Init_ESP8266(void)
{
 80005b0:	b580      	push	{r7, lr}
 80005b2:	af00      	add	r7, sp, #0
	Delay_ms(5000);
 80005b4:	4b05      	ldr	r3, [pc, #20]	@ (80005cc <Init_ESP8266+0x1c>)
 80005b6:	0018      	movs	r0, r3
 80005b8:	f7ff fe3c 	bl	8000234 <Delay_ms>
	Basic_Commands();
 80005bc:	f7ff ff40 	bl	8000440 <Basic_Commands>
	Wifi_Conn_Commands();
 80005c0:	f7ff ff60 	bl	8000484 <Wifi_Conn_Commands>
}
 80005c4:	46c0      	nop			@ (mov r8, r8)
 80005c6:	46bd      	mov	sp, r7
 80005c8:	bd80      	pop	{r7, pc}
 80005ca:	46c0      	nop			@ (mov r8, r8)
 80005cc:	00001388 	.word	0x00001388

080005d0 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80005d0:	b580      	push	{r7, lr}
 80005d2:	b086      	sub	sp, #24
 80005d4:	af00      	add	r7, sp, #0
 80005d6:	60f8      	str	r0, [r7, #12]
 80005d8:	60b9      	str	r1, [r7, #8]
 80005da:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005dc:	2300      	movs	r3, #0
 80005de:	617b      	str	r3, [r7, #20]
 80005e0:	e00a      	b.n	80005f8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80005e2:	e000      	b.n	80005e6 <_read+0x16>
 80005e4:	bf00      	nop
 80005e6:	0001      	movs	r1, r0
 80005e8:	68bb      	ldr	r3, [r7, #8]
 80005ea:	1c5a      	adds	r2, r3, #1
 80005ec:	60ba      	str	r2, [r7, #8]
 80005ee:	b2ca      	uxtb	r2, r1
 80005f0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005f2:	697b      	ldr	r3, [r7, #20]
 80005f4:	3301      	adds	r3, #1
 80005f6:	617b      	str	r3, [r7, #20]
 80005f8:	697a      	ldr	r2, [r7, #20]
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	429a      	cmp	r2, r3
 80005fe:	dbf0      	blt.n	80005e2 <_read+0x12>
  }

  return len;
 8000600:	687b      	ldr	r3, [r7, #4]
}
 8000602:	0018      	movs	r0, r3
 8000604:	46bd      	mov	sp, r7
 8000606:	b006      	add	sp, #24
 8000608:	bd80      	pop	{r7, pc}

0800060a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800060a:	b580      	push	{r7, lr}
 800060c:	b086      	sub	sp, #24
 800060e:	af00      	add	r7, sp, #0
 8000610:	60f8      	str	r0, [r7, #12]
 8000612:	60b9      	str	r1, [r7, #8]
 8000614:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000616:	2300      	movs	r3, #0
 8000618:	617b      	str	r3, [r7, #20]
 800061a:	e009      	b.n	8000630 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800061c:	68bb      	ldr	r3, [r7, #8]
 800061e:	1c5a      	adds	r2, r3, #1
 8000620:	60ba      	str	r2, [r7, #8]
 8000622:	781b      	ldrb	r3, [r3, #0]
 8000624:	0018      	movs	r0, r3
 8000626:	f7ff fe21 	bl	800026c <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800062a:	697b      	ldr	r3, [r7, #20]
 800062c:	3301      	adds	r3, #1
 800062e:	617b      	str	r3, [r7, #20]
 8000630:	697a      	ldr	r2, [r7, #20]
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	429a      	cmp	r2, r3
 8000636:	dbf1      	blt.n	800061c <_write+0x12>
  }
  return len;
 8000638:	687b      	ldr	r3, [r7, #4]
}
 800063a:	0018      	movs	r0, r3
 800063c:	46bd      	mov	sp, r7
 800063e:	b006      	add	sp, #24
 8000640:	bd80      	pop	{r7, pc}

08000642 <_close>:

int _close(int file)
{
 8000642:	b580      	push	{r7, lr}
 8000644:	b082      	sub	sp, #8
 8000646:	af00      	add	r7, sp, #0
 8000648:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800064a:	2301      	movs	r3, #1
 800064c:	425b      	negs	r3, r3
}
 800064e:	0018      	movs	r0, r3
 8000650:	46bd      	mov	sp, r7
 8000652:	b002      	add	sp, #8
 8000654:	bd80      	pop	{r7, pc}

08000656 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000656:	b580      	push	{r7, lr}
 8000658:	b082      	sub	sp, #8
 800065a:	af00      	add	r7, sp, #0
 800065c:	6078      	str	r0, [r7, #4]
 800065e:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000660:	683b      	ldr	r3, [r7, #0]
 8000662:	2280      	movs	r2, #128	@ 0x80
 8000664:	0192      	lsls	r2, r2, #6
 8000666:	605a      	str	r2, [r3, #4]
  return 0;
 8000668:	2300      	movs	r3, #0
}
 800066a:	0018      	movs	r0, r3
 800066c:	46bd      	mov	sp, r7
 800066e:	b002      	add	sp, #8
 8000670:	bd80      	pop	{r7, pc}

08000672 <_isatty>:

int _isatty(int file)
{
 8000672:	b580      	push	{r7, lr}
 8000674:	b082      	sub	sp, #8
 8000676:	af00      	add	r7, sp, #0
 8000678:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800067a:	2301      	movs	r3, #1
}
 800067c:	0018      	movs	r0, r3
 800067e:	46bd      	mov	sp, r7
 8000680:	b002      	add	sp, #8
 8000682:	bd80      	pop	{r7, pc}

08000684 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000684:	b580      	push	{r7, lr}
 8000686:	b084      	sub	sp, #16
 8000688:	af00      	add	r7, sp, #0
 800068a:	60f8      	str	r0, [r7, #12]
 800068c:	60b9      	str	r1, [r7, #8]
 800068e:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000690:	2300      	movs	r3, #0
}
 8000692:	0018      	movs	r0, r3
 8000694:	46bd      	mov	sp, r7
 8000696:	b004      	add	sp, #16
 8000698:	bd80      	pop	{r7, pc}
	...

0800069c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800069c:	b580      	push	{r7, lr}
 800069e:	b086      	sub	sp, #24
 80006a0:	af00      	add	r7, sp, #0
 80006a2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80006a4:	4a14      	ldr	r2, [pc, #80]	@ (80006f8 <_sbrk+0x5c>)
 80006a6:	4b15      	ldr	r3, [pc, #84]	@ (80006fc <_sbrk+0x60>)
 80006a8:	1ad3      	subs	r3, r2, r3
 80006aa:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80006ac:	697b      	ldr	r3, [r7, #20]
 80006ae:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80006b0:	4b13      	ldr	r3, [pc, #76]	@ (8000700 <_sbrk+0x64>)
 80006b2:	681b      	ldr	r3, [r3, #0]
 80006b4:	2b00      	cmp	r3, #0
 80006b6:	d102      	bne.n	80006be <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80006b8:	4b11      	ldr	r3, [pc, #68]	@ (8000700 <_sbrk+0x64>)
 80006ba:	4a12      	ldr	r2, [pc, #72]	@ (8000704 <_sbrk+0x68>)
 80006bc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80006be:	4b10      	ldr	r3, [pc, #64]	@ (8000700 <_sbrk+0x64>)
 80006c0:	681a      	ldr	r2, [r3, #0]
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	18d3      	adds	r3, r2, r3
 80006c6:	693a      	ldr	r2, [r7, #16]
 80006c8:	429a      	cmp	r2, r3
 80006ca:	d207      	bcs.n	80006dc <_sbrk+0x40>
  {
    errno = ENOMEM;
 80006cc:	f000 fabc 	bl	8000c48 <__errno>
 80006d0:	0003      	movs	r3, r0
 80006d2:	220c      	movs	r2, #12
 80006d4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80006d6:	2301      	movs	r3, #1
 80006d8:	425b      	negs	r3, r3
 80006da:	e009      	b.n	80006f0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80006dc:	4b08      	ldr	r3, [pc, #32]	@ (8000700 <_sbrk+0x64>)
 80006de:	681b      	ldr	r3, [r3, #0]
 80006e0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80006e2:	4b07      	ldr	r3, [pc, #28]	@ (8000700 <_sbrk+0x64>)
 80006e4:	681a      	ldr	r2, [r3, #0]
 80006e6:	687b      	ldr	r3, [r7, #4]
 80006e8:	18d2      	adds	r2, r2, r3
 80006ea:	4b05      	ldr	r3, [pc, #20]	@ (8000700 <_sbrk+0x64>)
 80006ec:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 80006ee:	68fb      	ldr	r3, [r7, #12]
}
 80006f0:	0018      	movs	r0, r3
 80006f2:	46bd      	mov	sp, r7
 80006f4:	b006      	add	sp, #24
 80006f6:	bd80      	pop	{r7, pc}
 80006f8:	20004000 	.word	0x20004000
 80006fc:	00000400 	.word	0x00000400
 8000700:	200001ac 	.word	0x200001ac
 8000704:	20000300 	.word	0x20000300

08000708 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000708:	480d      	ldr	r0, [pc, #52]	@ (8000740 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800070a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800070c:	e000      	b.n	8000710 <Reset_Handler+0x8>
 800070e:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000710:	480c      	ldr	r0, [pc, #48]	@ (8000744 <LoopForever+0x6>)
  ldr r1, =_edata
 8000712:	490d      	ldr	r1, [pc, #52]	@ (8000748 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000714:	4a0d      	ldr	r2, [pc, #52]	@ (800074c <LoopForever+0xe>)
  movs r3, #0
 8000716:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000718:	e002      	b.n	8000720 <LoopCopyDataInit>

0800071a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800071a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800071c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800071e:	3304      	adds	r3, #4

08000720 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000720:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000722:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000724:	d3f9      	bcc.n	800071a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000726:	4a0a      	ldr	r2, [pc, #40]	@ (8000750 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000728:	4c0a      	ldr	r4, [pc, #40]	@ (8000754 <LoopForever+0x16>)
  movs r3, #0
 800072a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800072c:	e001      	b.n	8000732 <LoopFillZerobss>

0800072e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800072e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000730:	3204      	adds	r2, #4

08000732 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000732:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000734:	d3fb      	bcc.n	800072e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000736:	f000 fa8d 	bl	8000c54 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800073a:	f7ff fda5 	bl	8000288 <main>

0800073e <LoopForever>:

LoopForever:
  b LoopForever
 800073e:	e7fe      	b.n	800073e <LoopForever>
  ldr   r0, =_estack
 8000740:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 8000744:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000748:	20000188 	.word	0x20000188
  ldr r2, =_sidata
 800074c:	0800173c 	.word	0x0800173c
  ldr r2, =_sbss
 8000750:	20000188 	.word	0x20000188
  ldr r4, =_ebss
 8000754:	200002fc 	.word	0x200002fc

08000758 <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000758:	e7fe      	b.n	8000758 <ADC_COMP_IRQHandler>
	...

0800075c <std>:
 800075c:	2300      	movs	r3, #0
 800075e:	b510      	push	{r4, lr}
 8000760:	0004      	movs	r4, r0
 8000762:	6003      	str	r3, [r0, #0]
 8000764:	6043      	str	r3, [r0, #4]
 8000766:	6083      	str	r3, [r0, #8]
 8000768:	8181      	strh	r1, [r0, #12]
 800076a:	6643      	str	r3, [r0, #100]	@ 0x64
 800076c:	81c2      	strh	r2, [r0, #14]
 800076e:	6103      	str	r3, [r0, #16]
 8000770:	6143      	str	r3, [r0, #20]
 8000772:	6183      	str	r3, [r0, #24]
 8000774:	0019      	movs	r1, r3
 8000776:	2208      	movs	r2, #8
 8000778:	305c      	adds	r0, #92	@ 0x5c
 800077a:	f000 fa0f 	bl	8000b9c <memset>
 800077e:	4b0b      	ldr	r3, [pc, #44]	@ (80007ac <std+0x50>)
 8000780:	6224      	str	r4, [r4, #32]
 8000782:	6263      	str	r3, [r4, #36]	@ 0x24
 8000784:	4b0a      	ldr	r3, [pc, #40]	@ (80007b0 <std+0x54>)
 8000786:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000788:	4b0a      	ldr	r3, [pc, #40]	@ (80007b4 <std+0x58>)
 800078a:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800078c:	4b0a      	ldr	r3, [pc, #40]	@ (80007b8 <std+0x5c>)
 800078e:	6323      	str	r3, [r4, #48]	@ 0x30
 8000790:	4b0a      	ldr	r3, [pc, #40]	@ (80007bc <std+0x60>)
 8000792:	429c      	cmp	r4, r3
 8000794:	d005      	beq.n	80007a2 <std+0x46>
 8000796:	4b0a      	ldr	r3, [pc, #40]	@ (80007c0 <std+0x64>)
 8000798:	429c      	cmp	r4, r3
 800079a:	d002      	beq.n	80007a2 <std+0x46>
 800079c:	4b09      	ldr	r3, [pc, #36]	@ (80007c4 <std+0x68>)
 800079e:	429c      	cmp	r4, r3
 80007a0:	d103      	bne.n	80007aa <std+0x4e>
 80007a2:	0020      	movs	r0, r4
 80007a4:	3058      	adds	r0, #88	@ 0x58
 80007a6:	f000 fa79 	bl	8000c9c <__retarget_lock_init_recursive>
 80007aa:	bd10      	pop	{r4, pc}
 80007ac:	080009c5 	.word	0x080009c5
 80007b0:	080009ed 	.word	0x080009ed
 80007b4:	08000a25 	.word	0x08000a25
 80007b8:	08000a51 	.word	0x08000a51
 80007bc:	200001b0 	.word	0x200001b0
 80007c0:	20000218 	.word	0x20000218
 80007c4:	20000280 	.word	0x20000280

080007c8 <stdio_exit_handler>:
 80007c8:	b510      	push	{r4, lr}
 80007ca:	4a03      	ldr	r2, [pc, #12]	@ (80007d8 <stdio_exit_handler+0x10>)
 80007cc:	4903      	ldr	r1, [pc, #12]	@ (80007dc <stdio_exit_handler+0x14>)
 80007ce:	4804      	ldr	r0, [pc, #16]	@ (80007e0 <stdio_exit_handler+0x18>)
 80007d0:	f000 f86c 	bl	80008ac <_fwalk_sglue>
 80007d4:	bd10      	pop	{r4, pc}
 80007d6:	46c0      	nop			@ (mov r8, r8)
 80007d8:	2000012c 	.word	0x2000012c
 80007dc:	08001529 	.word	0x08001529
 80007e0:	2000013c 	.word	0x2000013c

080007e4 <cleanup_stdio>:
 80007e4:	6841      	ldr	r1, [r0, #4]
 80007e6:	4b0b      	ldr	r3, [pc, #44]	@ (8000814 <cleanup_stdio+0x30>)
 80007e8:	b510      	push	{r4, lr}
 80007ea:	0004      	movs	r4, r0
 80007ec:	4299      	cmp	r1, r3
 80007ee:	d001      	beq.n	80007f4 <cleanup_stdio+0x10>
 80007f0:	f000 fe9a 	bl	8001528 <_fflush_r>
 80007f4:	68a1      	ldr	r1, [r4, #8]
 80007f6:	4b08      	ldr	r3, [pc, #32]	@ (8000818 <cleanup_stdio+0x34>)
 80007f8:	4299      	cmp	r1, r3
 80007fa:	d002      	beq.n	8000802 <cleanup_stdio+0x1e>
 80007fc:	0020      	movs	r0, r4
 80007fe:	f000 fe93 	bl	8001528 <_fflush_r>
 8000802:	68e1      	ldr	r1, [r4, #12]
 8000804:	4b05      	ldr	r3, [pc, #20]	@ (800081c <cleanup_stdio+0x38>)
 8000806:	4299      	cmp	r1, r3
 8000808:	d002      	beq.n	8000810 <cleanup_stdio+0x2c>
 800080a:	0020      	movs	r0, r4
 800080c:	f000 fe8c 	bl	8001528 <_fflush_r>
 8000810:	bd10      	pop	{r4, pc}
 8000812:	46c0      	nop			@ (mov r8, r8)
 8000814:	200001b0 	.word	0x200001b0
 8000818:	20000218 	.word	0x20000218
 800081c:	20000280 	.word	0x20000280

08000820 <global_stdio_init.part.0>:
 8000820:	b510      	push	{r4, lr}
 8000822:	4b09      	ldr	r3, [pc, #36]	@ (8000848 <global_stdio_init.part.0+0x28>)
 8000824:	4a09      	ldr	r2, [pc, #36]	@ (800084c <global_stdio_init.part.0+0x2c>)
 8000826:	2104      	movs	r1, #4
 8000828:	601a      	str	r2, [r3, #0]
 800082a:	4809      	ldr	r0, [pc, #36]	@ (8000850 <global_stdio_init.part.0+0x30>)
 800082c:	2200      	movs	r2, #0
 800082e:	f7ff ff95 	bl	800075c <std>
 8000832:	2201      	movs	r2, #1
 8000834:	2109      	movs	r1, #9
 8000836:	4807      	ldr	r0, [pc, #28]	@ (8000854 <global_stdio_init.part.0+0x34>)
 8000838:	f7ff ff90 	bl	800075c <std>
 800083c:	2202      	movs	r2, #2
 800083e:	2112      	movs	r1, #18
 8000840:	4805      	ldr	r0, [pc, #20]	@ (8000858 <global_stdio_init.part.0+0x38>)
 8000842:	f7ff ff8b 	bl	800075c <std>
 8000846:	bd10      	pop	{r4, pc}
 8000848:	200002e8 	.word	0x200002e8
 800084c:	080007c9 	.word	0x080007c9
 8000850:	200001b0 	.word	0x200001b0
 8000854:	20000218 	.word	0x20000218
 8000858:	20000280 	.word	0x20000280

0800085c <__sfp_lock_acquire>:
 800085c:	b510      	push	{r4, lr}
 800085e:	4802      	ldr	r0, [pc, #8]	@ (8000868 <__sfp_lock_acquire+0xc>)
 8000860:	f000 fa1d 	bl	8000c9e <__retarget_lock_acquire_recursive>
 8000864:	bd10      	pop	{r4, pc}
 8000866:	46c0      	nop			@ (mov r8, r8)
 8000868:	200002f1 	.word	0x200002f1

0800086c <__sfp_lock_release>:
 800086c:	b510      	push	{r4, lr}
 800086e:	4802      	ldr	r0, [pc, #8]	@ (8000878 <__sfp_lock_release+0xc>)
 8000870:	f000 fa16 	bl	8000ca0 <__retarget_lock_release_recursive>
 8000874:	bd10      	pop	{r4, pc}
 8000876:	46c0      	nop			@ (mov r8, r8)
 8000878:	200002f1 	.word	0x200002f1

0800087c <__sinit>:
 800087c:	b510      	push	{r4, lr}
 800087e:	0004      	movs	r4, r0
 8000880:	f7ff ffec 	bl	800085c <__sfp_lock_acquire>
 8000884:	6a23      	ldr	r3, [r4, #32]
 8000886:	2b00      	cmp	r3, #0
 8000888:	d002      	beq.n	8000890 <__sinit+0x14>
 800088a:	f7ff ffef 	bl	800086c <__sfp_lock_release>
 800088e:	bd10      	pop	{r4, pc}
 8000890:	4b04      	ldr	r3, [pc, #16]	@ (80008a4 <__sinit+0x28>)
 8000892:	6223      	str	r3, [r4, #32]
 8000894:	4b04      	ldr	r3, [pc, #16]	@ (80008a8 <__sinit+0x2c>)
 8000896:	681b      	ldr	r3, [r3, #0]
 8000898:	2b00      	cmp	r3, #0
 800089a:	d1f6      	bne.n	800088a <__sinit+0xe>
 800089c:	f7ff ffc0 	bl	8000820 <global_stdio_init.part.0>
 80008a0:	e7f3      	b.n	800088a <__sinit+0xe>
 80008a2:	46c0      	nop			@ (mov r8, r8)
 80008a4:	080007e5 	.word	0x080007e5
 80008a8:	200002e8 	.word	0x200002e8

080008ac <_fwalk_sglue>:
 80008ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80008ae:	0014      	movs	r4, r2
 80008b0:	2600      	movs	r6, #0
 80008b2:	9000      	str	r0, [sp, #0]
 80008b4:	9101      	str	r1, [sp, #4]
 80008b6:	68a5      	ldr	r5, [r4, #8]
 80008b8:	6867      	ldr	r7, [r4, #4]
 80008ba:	3f01      	subs	r7, #1
 80008bc:	d504      	bpl.n	80008c8 <_fwalk_sglue+0x1c>
 80008be:	6824      	ldr	r4, [r4, #0]
 80008c0:	2c00      	cmp	r4, #0
 80008c2:	d1f8      	bne.n	80008b6 <_fwalk_sglue+0xa>
 80008c4:	0030      	movs	r0, r6
 80008c6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80008c8:	89ab      	ldrh	r3, [r5, #12]
 80008ca:	2b01      	cmp	r3, #1
 80008cc:	d908      	bls.n	80008e0 <_fwalk_sglue+0x34>
 80008ce:	220e      	movs	r2, #14
 80008d0:	5eab      	ldrsh	r3, [r5, r2]
 80008d2:	3301      	adds	r3, #1
 80008d4:	d004      	beq.n	80008e0 <_fwalk_sglue+0x34>
 80008d6:	0029      	movs	r1, r5
 80008d8:	9800      	ldr	r0, [sp, #0]
 80008da:	9b01      	ldr	r3, [sp, #4]
 80008dc:	4798      	blx	r3
 80008de:	4306      	orrs	r6, r0
 80008e0:	3568      	adds	r5, #104	@ 0x68
 80008e2:	e7ea      	b.n	80008ba <_fwalk_sglue+0xe>

080008e4 <iprintf>:
 80008e4:	b40f      	push	{r0, r1, r2, r3}
 80008e6:	b507      	push	{r0, r1, r2, lr}
 80008e8:	4905      	ldr	r1, [pc, #20]	@ (8000900 <iprintf+0x1c>)
 80008ea:	ab04      	add	r3, sp, #16
 80008ec:	6808      	ldr	r0, [r1, #0]
 80008ee:	cb04      	ldmia	r3!, {r2}
 80008f0:	6881      	ldr	r1, [r0, #8]
 80008f2:	9301      	str	r3, [sp, #4]
 80008f4:	f000 fafa 	bl	8000eec <_vfiprintf_r>
 80008f8:	b003      	add	sp, #12
 80008fa:	bc08      	pop	{r3}
 80008fc:	b004      	add	sp, #16
 80008fe:	4718      	bx	r3
 8000900:	20000138 	.word	0x20000138

08000904 <_puts_r>:
 8000904:	6a03      	ldr	r3, [r0, #32]
 8000906:	b570      	push	{r4, r5, r6, lr}
 8000908:	0005      	movs	r5, r0
 800090a:	000e      	movs	r6, r1
 800090c:	6884      	ldr	r4, [r0, #8]
 800090e:	2b00      	cmp	r3, #0
 8000910:	d101      	bne.n	8000916 <_puts_r+0x12>
 8000912:	f7ff ffb3 	bl	800087c <__sinit>
 8000916:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000918:	07db      	lsls	r3, r3, #31
 800091a:	d405      	bmi.n	8000928 <_puts_r+0x24>
 800091c:	89a3      	ldrh	r3, [r4, #12]
 800091e:	059b      	lsls	r3, r3, #22
 8000920:	d402      	bmi.n	8000928 <_puts_r+0x24>
 8000922:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000924:	f000 f9bb 	bl	8000c9e <__retarget_lock_acquire_recursive>
 8000928:	89a3      	ldrh	r3, [r4, #12]
 800092a:	071b      	lsls	r3, r3, #28
 800092c:	d502      	bpl.n	8000934 <_puts_r+0x30>
 800092e:	6923      	ldr	r3, [r4, #16]
 8000930:	2b00      	cmp	r3, #0
 8000932:	d11f      	bne.n	8000974 <_puts_r+0x70>
 8000934:	0021      	movs	r1, r4
 8000936:	0028      	movs	r0, r5
 8000938:	f000 f8d2 	bl	8000ae0 <__swsetup_r>
 800093c:	2800      	cmp	r0, #0
 800093e:	d019      	beq.n	8000974 <_puts_r+0x70>
 8000940:	2501      	movs	r5, #1
 8000942:	426d      	negs	r5, r5
 8000944:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000946:	07db      	lsls	r3, r3, #31
 8000948:	d405      	bmi.n	8000956 <_puts_r+0x52>
 800094a:	89a3      	ldrh	r3, [r4, #12]
 800094c:	059b      	lsls	r3, r3, #22
 800094e:	d402      	bmi.n	8000956 <_puts_r+0x52>
 8000950:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000952:	f000 f9a5 	bl	8000ca0 <__retarget_lock_release_recursive>
 8000956:	0028      	movs	r0, r5
 8000958:	bd70      	pop	{r4, r5, r6, pc}
 800095a:	3601      	adds	r6, #1
 800095c:	60a3      	str	r3, [r4, #8]
 800095e:	2b00      	cmp	r3, #0
 8000960:	da04      	bge.n	800096c <_puts_r+0x68>
 8000962:	69a2      	ldr	r2, [r4, #24]
 8000964:	429a      	cmp	r2, r3
 8000966:	dc16      	bgt.n	8000996 <_puts_r+0x92>
 8000968:	290a      	cmp	r1, #10
 800096a:	d014      	beq.n	8000996 <_puts_r+0x92>
 800096c:	6823      	ldr	r3, [r4, #0]
 800096e:	1c5a      	adds	r2, r3, #1
 8000970:	6022      	str	r2, [r4, #0]
 8000972:	7019      	strb	r1, [r3, #0]
 8000974:	68a3      	ldr	r3, [r4, #8]
 8000976:	7831      	ldrb	r1, [r6, #0]
 8000978:	3b01      	subs	r3, #1
 800097a:	2900      	cmp	r1, #0
 800097c:	d1ed      	bne.n	800095a <_puts_r+0x56>
 800097e:	60a3      	str	r3, [r4, #8]
 8000980:	2b00      	cmp	r3, #0
 8000982:	da0f      	bge.n	80009a4 <_puts_r+0xa0>
 8000984:	0022      	movs	r2, r4
 8000986:	0028      	movs	r0, r5
 8000988:	310a      	adds	r1, #10
 800098a:	f000 f867 	bl	8000a5c <__swbuf_r>
 800098e:	3001      	adds	r0, #1
 8000990:	d0d6      	beq.n	8000940 <_puts_r+0x3c>
 8000992:	250a      	movs	r5, #10
 8000994:	e7d6      	b.n	8000944 <_puts_r+0x40>
 8000996:	0022      	movs	r2, r4
 8000998:	0028      	movs	r0, r5
 800099a:	f000 f85f 	bl	8000a5c <__swbuf_r>
 800099e:	3001      	adds	r0, #1
 80009a0:	d1e8      	bne.n	8000974 <_puts_r+0x70>
 80009a2:	e7cd      	b.n	8000940 <_puts_r+0x3c>
 80009a4:	6823      	ldr	r3, [r4, #0]
 80009a6:	1c5a      	adds	r2, r3, #1
 80009a8:	6022      	str	r2, [r4, #0]
 80009aa:	220a      	movs	r2, #10
 80009ac:	701a      	strb	r2, [r3, #0]
 80009ae:	e7f0      	b.n	8000992 <_puts_r+0x8e>

080009b0 <puts>:
 80009b0:	b510      	push	{r4, lr}
 80009b2:	4b03      	ldr	r3, [pc, #12]	@ (80009c0 <puts+0x10>)
 80009b4:	0001      	movs	r1, r0
 80009b6:	6818      	ldr	r0, [r3, #0]
 80009b8:	f7ff ffa4 	bl	8000904 <_puts_r>
 80009bc:	bd10      	pop	{r4, pc}
 80009be:	46c0      	nop			@ (mov r8, r8)
 80009c0:	20000138 	.word	0x20000138

080009c4 <__sread>:
 80009c4:	b570      	push	{r4, r5, r6, lr}
 80009c6:	000c      	movs	r4, r1
 80009c8:	250e      	movs	r5, #14
 80009ca:	5f49      	ldrsh	r1, [r1, r5]
 80009cc:	f000 f914 	bl	8000bf8 <_read_r>
 80009d0:	2800      	cmp	r0, #0
 80009d2:	db03      	blt.n	80009dc <__sread+0x18>
 80009d4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80009d6:	181b      	adds	r3, r3, r0
 80009d8:	6563      	str	r3, [r4, #84]	@ 0x54
 80009da:	bd70      	pop	{r4, r5, r6, pc}
 80009dc:	89a3      	ldrh	r3, [r4, #12]
 80009de:	4a02      	ldr	r2, [pc, #8]	@ (80009e8 <__sread+0x24>)
 80009e0:	4013      	ands	r3, r2
 80009e2:	81a3      	strh	r3, [r4, #12]
 80009e4:	e7f9      	b.n	80009da <__sread+0x16>
 80009e6:	46c0      	nop			@ (mov r8, r8)
 80009e8:	ffffefff 	.word	0xffffefff

080009ec <__swrite>:
 80009ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009ee:	001f      	movs	r7, r3
 80009f0:	898b      	ldrh	r3, [r1, #12]
 80009f2:	0005      	movs	r5, r0
 80009f4:	000c      	movs	r4, r1
 80009f6:	0016      	movs	r6, r2
 80009f8:	05db      	lsls	r3, r3, #23
 80009fa:	d505      	bpl.n	8000a08 <__swrite+0x1c>
 80009fc:	230e      	movs	r3, #14
 80009fe:	5ec9      	ldrsh	r1, [r1, r3]
 8000a00:	2200      	movs	r2, #0
 8000a02:	2302      	movs	r3, #2
 8000a04:	f000 f8e4 	bl	8000bd0 <_lseek_r>
 8000a08:	89a3      	ldrh	r3, [r4, #12]
 8000a0a:	4a05      	ldr	r2, [pc, #20]	@ (8000a20 <__swrite+0x34>)
 8000a0c:	0028      	movs	r0, r5
 8000a0e:	4013      	ands	r3, r2
 8000a10:	81a3      	strh	r3, [r4, #12]
 8000a12:	0032      	movs	r2, r6
 8000a14:	230e      	movs	r3, #14
 8000a16:	5ee1      	ldrsh	r1, [r4, r3]
 8000a18:	003b      	movs	r3, r7
 8000a1a:	f000 f901 	bl	8000c20 <_write_r>
 8000a1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a20:	ffffefff 	.word	0xffffefff

08000a24 <__sseek>:
 8000a24:	b570      	push	{r4, r5, r6, lr}
 8000a26:	000c      	movs	r4, r1
 8000a28:	250e      	movs	r5, #14
 8000a2a:	5f49      	ldrsh	r1, [r1, r5]
 8000a2c:	f000 f8d0 	bl	8000bd0 <_lseek_r>
 8000a30:	89a3      	ldrh	r3, [r4, #12]
 8000a32:	1c42      	adds	r2, r0, #1
 8000a34:	d103      	bne.n	8000a3e <__sseek+0x1a>
 8000a36:	4a05      	ldr	r2, [pc, #20]	@ (8000a4c <__sseek+0x28>)
 8000a38:	4013      	ands	r3, r2
 8000a3a:	81a3      	strh	r3, [r4, #12]
 8000a3c:	bd70      	pop	{r4, r5, r6, pc}
 8000a3e:	2280      	movs	r2, #128	@ 0x80
 8000a40:	0152      	lsls	r2, r2, #5
 8000a42:	4313      	orrs	r3, r2
 8000a44:	81a3      	strh	r3, [r4, #12]
 8000a46:	6560      	str	r0, [r4, #84]	@ 0x54
 8000a48:	e7f8      	b.n	8000a3c <__sseek+0x18>
 8000a4a:	46c0      	nop			@ (mov r8, r8)
 8000a4c:	ffffefff 	.word	0xffffefff

08000a50 <__sclose>:
 8000a50:	b510      	push	{r4, lr}
 8000a52:	230e      	movs	r3, #14
 8000a54:	5ec9      	ldrsh	r1, [r1, r3]
 8000a56:	f000 f8a9 	bl	8000bac <_close_r>
 8000a5a:	bd10      	pop	{r4, pc}

08000a5c <__swbuf_r>:
 8000a5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a5e:	0006      	movs	r6, r0
 8000a60:	000d      	movs	r5, r1
 8000a62:	0014      	movs	r4, r2
 8000a64:	2800      	cmp	r0, #0
 8000a66:	d004      	beq.n	8000a72 <__swbuf_r+0x16>
 8000a68:	6a03      	ldr	r3, [r0, #32]
 8000a6a:	2b00      	cmp	r3, #0
 8000a6c:	d101      	bne.n	8000a72 <__swbuf_r+0x16>
 8000a6e:	f7ff ff05 	bl	800087c <__sinit>
 8000a72:	69a3      	ldr	r3, [r4, #24]
 8000a74:	60a3      	str	r3, [r4, #8]
 8000a76:	89a3      	ldrh	r3, [r4, #12]
 8000a78:	071b      	lsls	r3, r3, #28
 8000a7a:	d502      	bpl.n	8000a82 <__swbuf_r+0x26>
 8000a7c:	6923      	ldr	r3, [r4, #16]
 8000a7e:	2b00      	cmp	r3, #0
 8000a80:	d109      	bne.n	8000a96 <__swbuf_r+0x3a>
 8000a82:	0021      	movs	r1, r4
 8000a84:	0030      	movs	r0, r6
 8000a86:	f000 f82b 	bl	8000ae0 <__swsetup_r>
 8000a8a:	2800      	cmp	r0, #0
 8000a8c:	d003      	beq.n	8000a96 <__swbuf_r+0x3a>
 8000a8e:	2501      	movs	r5, #1
 8000a90:	426d      	negs	r5, r5
 8000a92:	0028      	movs	r0, r5
 8000a94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a96:	6923      	ldr	r3, [r4, #16]
 8000a98:	6820      	ldr	r0, [r4, #0]
 8000a9a:	b2ef      	uxtb	r7, r5
 8000a9c:	1ac0      	subs	r0, r0, r3
 8000a9e:	6963      	ldr	r3, [r4, #20]
 8000aa0:	b2ed      	uxtb	r5, r5
 8000aa2:	4283      	cmp	r3, r0
 8000aa4:	dc05      	bgt.n	8000ab2 <__swbuf_r+0x56>
 8000aa6:	0021      	movs	r1, r4
 8000aa8:	0030      	movs	r0, r6
 8000aaa:	f000 fd3d 	bl	8001528 <_fflush_r>
 8000aae:	2800      	cmp	r0, #0
 8000ab0:	d1ed      	bne.n	8000a8e <__swbuf_r+0x32>
 8000ab2:	68a3      	ldr	r3, [r4, #8]
 8000ab4:	3001      	adds	r0, #1
 8000ab6:	3b01      	subs	r3, #1
 8000ab8:	60a3      	str	r3, [r4, #8]
 8000aba:	6823      	ldr	r3, [r4, #0]
 8000abc:	1c5a      	adds	r2, r3, #1
 8000abe:	6022      	str	r2, [r4, #0]
 8000ac0:	701f      	strb	r7, [r3, #0]
 8000ac2:	6963      	ldr	r3, [r4, #20]
 8000ac4:	4283      	cmp	r3, r0
 8000ac6:	d004      	beq.n	8000ad2 <__swbuf_r+0x76>
 8000ac8:	89a3      	ldrh	r3, [r4, #12]
 8000aca:	07db      	lsls	r3, r3, #31
 8000acc:	d5e1      	bpl.n	8000a92 <__swbuf_r+0x36>
 8000ace:	2d0a      	cmp	r5, #10
 8000ad0:	d1df      	bne.n	8000a92 <__swbuf_r+0x36>
 8000ad2:	0021      	movs	r1, r4
 8000ad4:	0030      	movs	r0, r6
 8000ad6:	f000 fd27 	bl	8001528 <_fflush_r>
 8000ada:	2800      	cmp	r0, #0
 8000adc:	d0d9      	beq.n	8000a92 <__swbuf_r+0x36>
 8000ade:	e7d6      	b.n	8000a8e <__swbuf_r+0x32>

08000ae0 <__swsetup_r>:
 8000ae0:	4b2d      	ldr	r3, [pc, #180]	@ (8000b98 <__swsetup_r+0xb8>)
 8000ae2:	b570      	push	{r4, r5, r6, lr}
 8000ae4:	0005      	movs	r5, r0
 8000ae6:	6818      	ldr	r0, [r3, #0]
 8000ae8:	000c      	movs	r4, r1
 8000aea:	2800      	cmp	r0, #0
 8000aec:	d004      	beq.n	8000af8 <__swsetup_r+0x18>
 8000aee:	6a03      	ldr	r3, [r0, #32]
 8000af0:	2b00      	cmp	r3, #0
 8000af2:	d101      	bne.n	8000af8 <__swsetup_r+0x18>
 8000af4:	f7ff fec2 	bl	800087c <__sinit>
 8000af8:	220c      	movs	r2, #12
 8000afa:	5ea3      	ldrsh	r3, [r4, r2]
 8000afc:	071a      	lsls	r2, r3, #28
 8000afe:	d423      	bmi.n	8000b48 <__swsetup_r+0x68>
 8000b00:	06da      	lsls	r2, r3, #27
 8000b02:	d407      	bmi.n	8000b14 <__swsetup_r+0x34>
 8000b04:	2209      	movs	r2, #9
 8000b06:	602a      	str	r2, [r5, #0]
 8000b08:	2240      	movs	r2, #64	@ 0x40
 8000b0a:	2001      	movs	r0, #1
 8000b0c:	4313      	orrs	r3, r2
 8000b0e:	81a3      	strh	r3, [r4, #12]
 8000b10:	4240      	negs	r0, r0
 8000b12:	e03a      	b.n	8000b8a <__swsetup_r+0xaa>
 8000b14:	075b      	lsls	r3, r3, #29
 8000b16:	d513      	bpl.n	8000b40 <__swsetup_r+0x60>
 8000b18:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000b1a:	2900      	cmp	r1, #0
 8000b1c:	d008      	beq.n	8000b30 <__swsetup_r+0x50>
 8000b1e:	0023      	movs	r3, r4
 8000b20:	3344      	adds	r3, #68	@ 0x44
 8000b22:	4299      	cmp	r1, r3
 8000b24:	d002      	beq.n	8000b2c <__swsetup_r+0x4c>
 8000b26:	0028      	movs	r0, r5
 8000b28:	f000 f8bc 	bl	8000ca4 <_free_r>
 8000b2c:	2300      	movs	r3, #0
 8000b2e:	6363      	str	r3, [r4, #52]	@ 0x34
 8000b30:	2224      	movs	r2, #36	@ 0x24
 8000b32:	89a3      	ldrh	r3, [r4, #12]
 8000b34:	4393      	bics	r3, r2
 8000b36:	81a3      	strh	r3, [r4, #12]
 8000b38:	2300      	movs	r3, #0
 8000b3a:	6063      	str	r3, [r4, #4]
 8000b3c:	6923      	ldr	r3, [r4, #16]
 8000b3e:	6023      	str	r3, [r4, #0]
 8000b40:	2308      	movs	r3, #8
 8000b42:	89a2      	ldrh	r2, [r4, #12]
 8000b44:	4313      	orrs	r3, r2
 8000b46:	81a3      	strh	r3, [r4, #12]
 8000b48:	6923      	ldr	r3, [r4, #16]
 8000b4a:	2b00      	cmp	r3, #0
 8000b4c:	d10b      	bne.n	8000b66 <__swsetup_r+0x86>
 8000b4e:	21a0      	movs	r1, #160	@ 0xa0
 8000b50:	2280      	movs	r2, #128	@ 0x80
 8000b52:	89a3      	ldrh	r3, [r4, #12]
 8000b54:	0089      	lsls	r1, r1, #2
 8000b56:	0092      	lsls	r2, r2, #2
 8000b58:	400b      	ands	r3, r1
 8000b5a:	4293      	cmp	r3, r2
 8000b5c:	d003      	beq.n	8000b66 <__swsetup_r+0x86>
 8000b5e:	0021      	movs	r1, r4
 8000b60:	0028      	movs	r0, r5
 8000b62:	f000 fd37 	bl	80015d4 <__smakebuf_r>
 8000b66:	220c      	movs	r2, #12
 8000b68:	5ea3      	ldrsh	r3, [r4, r2]
 8000b6a:	2101      	movs	r1, #1
 8000b6c:	001a      	movs	r2, r3
 8000b6e:	400a      	ands	r2, r1
 8000b70:	420b      	tst	r3, r1
 8000b72:	d00b      	beq.n	8000b8c <__swsetup_r+0xac>
 8000b74:	2200      	movs	r2, #0
 8000b76:	60a2      	str	r2, [r4, #8]
 8000b78:	6962      	ldr	r2, [r4, #20]
 8000b7a:	4252      	negs	r2, r2
 8000b7c:	61a2      	str	r2, [r4, #24]
 8000b7e:	2000      	movs	r0, #0
 8000b80:	6922      	ldr	r2, [r4, #16]
 8000b82:	4282      	cmp	r2, r0
 8000b84:	d101      	bne.n	8000b8a <__swsetup_r+0xaa>
 8000b86:	061a      	lsls	r2, r3, #24
 8000b88:	d4be      	bmi.n	8000b08 <__swsetup_r+0x28>
 8000b8a:	bd70      	pop	{r4, r5, r6, pc}
 8000b8c:	0799      	lsls	r1, r3, #30
 8000b8e:	d400      	bmi.n	8000b92 <__swsetup_r+0xb2>
 8000b90:	6962      	ldr	r2, [r4, #20]
 8000b92:	60a2      	str	r2, [r4, #8]
 8000b94:	e7f3      	b.n	8000b7e <__swsetup_r+0x9e>
 8000b96:	46c0      	nop			@ (mov r8, r8)
 8000b98:	20000138 	.word	0x20000138

08000b9c <memset>:
 8000b9c:	0003      	movs	r3, r0
 8000b9e:	1882      	adds	r2, r0, r2
 8000ba0:	4293      	cmp	r3, r2
 8000ba2:	d100      	bne.n	8000ba6 <memset+0xa>
 8000ba4:	4770      	bx	lr
 8000ba6:	7019      	strb	r1, [r3, #0]
 8000ba8:	3301      	adds	r3, #1
 8000baa:	e7f9      	b.n	8000ba0 <memset+0x4>

08000bac <_close_r>:
 8000bac:	2300      	movs	r3, #0
 8000bae:	b570      	push	{r4, r5, r6, lr}
 8000bb0:	4d06      	ldr	r5, [pc, #24]	@ (8000bcc <_close_r+0x20>)
 8000bb2:	0004      	movs	r4, r0
 8000bb4:	0008      	movs	r0, r1
 8000bb6:	602b      	str	r3, [r5, #0]
 8000bb8:	f7ff fd43 	bl	8000642 <_close>
 8000bbc:	1c43      	adds	r3, r0, #1
 8000bbe:	d103      	bne.n	8000bc8 <_close_r+0x1c>
 8000bc0:	682b      	ldr	r3, [r5, #0]
 8000bc2:	2b00      	cmp	r3, #0
 8000bc4:	d000      	beq.n	8000bc8 <_close_r+0x1c>
 8000bc6:	6023      	str	r3, [r4, #0]
 8000bc8:	bd70      	pop	{r4, r5, r6, pc}
 8000bca:	46c0      	nop			@ (mov r8, r8)
 8000bcc:	200002ec 	.word	0x200002ec

08000bd0 <_lseek_r>:
 8000bd0:	b570      	push	{r4, r5, r6, lr}
 8000bd2:	0004      	movs	r4, r0
 8000bd4:	0008      	movs	r0, r1
 8000bd6:	0011      	movs	r1, r2
 8000bd8:	001a      	movs	r2, r3
 8000bda:	2300      	movs	r3, #0
 8000bdc:	4d05      	ldr	r5, [pc, #20]	@ (8000bf4 <_lseek_r+0x24>)
 8000bde:	602b      	str	r3, [r5, #0]
 8000be0:	f7ff fd50 	bl	8000684 <_lseek>
 8000be4:	1c43      	adds	r3, r0, #1
 8000be6:	d103      	bne.n	8000bf0 <_lseek_r+0x20>
 8000be8:	682b      	ldr	r3, [r5, #0]
 8000bea:	2b00      	cmp	r3, #0
 8000bec:	d000      	beq.n	8000bf0 <_lseek_r+0x20>
 8000bee:	6023      	str	r3, [r4, #0]
 8000bf0:	bd70      	pop	{r4, r5, r6, pc}
 8000bf2:	46c0      	nop			@ (mov r8, r8)
 8000bf4:	200002ec 	.word	0x200002ec

08000bf8 <_read_r>:
 8000bf8:	b570      	push	{r4, r5, r6, lr}
 8000bfa:	0004      	movs	r4, r0
 8000bfc:	0008      	movs	r0, r1
 8000bfe:	0011      	movs	r1, r2
 8000c00:	001a      	movs	r2, r3
 8000c02:	2300      	movs	r3, #0
 8000c04:	4d05      	ldr	r5, [pc, #20]	@ (8000c1c <_read_r+0x24>)
 8000c06:	602b      	str	r3, [r5, #0]
 8000c08:	f7ff fce2 	bl	80005d0 <_read>
 8000c0c:	1c43      	adds	r3, r0, #1
 8000c0e:	d103      	bne.n	8000c18 <_read_r+0x20>
 8000c10:	682b      	ldr	r3, [r5, #0]
 8000c12:	2b00      	cmp	r3, #0
 8000c14:	d000      	beq.n	8000c18 <_read_r+0x20>
 8000c16:	6023      	str	r3, [r4, #0]
 8000c18:	bd70      	pop	{r4, r5, r6, pc}
 8000c1a:	46c0      	nop			@ (mov r8, r8)
 8000c1c:	200002ec 	.word	0x200002ec

08000c20 <_write_r>:
 8000c20:	b570      	push	{r4, r5, r6, lr}
 8000c22:	0004      	movs	r4, r0
 8000c24:	0008      	movs	r0, r1
 8000c26:	0011      	movs	r1, r2
 8000c28:	001a      	movs	r2, r3
 8000c2a:	2300      	movs	r3, #0
 8000c2c:	4d05      	ldr	r5, [pc, #20]	@ (8000c44 <_write_r+0x24>)
 8000c2e:	602b      	str	r3, [r5, #0]
 8000c30:	f7ff fceb 	bl	800060a <_write>
 8000c34:	1c43      	adds	r3, r0, #1
 8000c36:	d103      	bne.n	8000c40 <_write_r+0x20>
 8000c38:	682b      	ldr	r3, [r5, #0]
 8000c3a:	2b00      	cmp	r3, #0
 8000c3c:	d000      	beq.n	8000c40 <_write_r+0x20>
 8000c3e:	6023      	str	r3, [r4, #0]
 8000c40:	bd70      	pop	{r4, r5, r6, pc}
 8000c42:	46c0      	nop			@ (mov r8, r8)
 8000c44:	200002ec 	.word	0x200002ec

08000c48 <__errno>:
 8000c48:	4b01      	ldr	r3, [pc, #4]	@ (8000c50 <__errno+0x8>)
 8000c4a:	6818      	ldr	r0, [r3, #0]
 8000c4c:	4770      	bx	lr
 8000c4e:	46c0      	nop			@ (mov r8, r8)
 8000c50:	20000138 	.word	0x20000138

08000c54 <__libc_init_array>:
 8000c54:	b570      	push	{r4, r5, r6, lr}
 8000c56:	2600      	movs	r6, #0
 8000c58:	4c0c      	ldr	r4, [pc, #48]	@ (8000c8c <__libc_init_array+0x38>)
 8000c5a:	4d0d      	ldr	r5, [pc, #52]	@ (8000c90 <__libc_init_array+0x3c>)
 8000c5c:	1b64      	subs	r4, r4, r5
 8000c5e:	10a4      	asrs	r4, r4, #2
 8000c60:	42a6      	cmp	r6, r4
 8000c62:	d109      	bne.n	8000c78 <__libc_init_array+0x24>
 8000c64:	2600      	movs	r6, #0
 8000c66:	f000 fd39 	bl	80016dc <_init>
 8000c6a:	4c0a      	ldr	r4, [pc, #40]	@ (8000c94 <__libc_init_array+0x40>)
 8000c6c:	4d0a      	ldr	r5, [pc, #40]	@ (8000c98 <__libc_init_array+0x44>)
 8000c6e:	1b64      	subs	r4, r4, r5
 8000c70:	10a4      	asrs	r4, r4, #2
 8000c72:	42a6      	cmp	r6, r4
 8000c74:	d105      	bne.n	8000c82 <__libc_init_array+0x2e>
 8000c76:	bd70      	pop	{r4, r5, r6, pc}
 8000c78:	00b3      	lsls	r3, r6, #2
 8000c7a:	58eb      	ldr	r3, [r5, r3]
 8000c7c:	4798      	blx	r3
 8000c7e:	3601      	adds	r6, #1
 8000c80:	e7ee      	b.n	8000c60 <__libc_init_array+0xc>
 8000c82:	00b3      	lsls	r3, r6, #2
 8000c84:	58eb      	ldr	r3, [r5, r3]
 8000c86:	4798      	blx	r3
 8000c88:	3601      	adds	r6, #1
 8000c8a:	e7f2      	b.n	8000c72 <__libc_init_array+0x1e>
 8000c8c:	08001734 	.word	0x08001734
 8000c90:	08001734 	.word	0x08001734
 8000c94:	08001738 	.word	0x08001738
 8000c98:	08001734 	.word	0x08001734

08000c9c <__retarget_lock_init_recursive>:
 8000c9c:	4770      	bx	lr

08000c9e <__retarget_lock_acquire_recursive>:
 8000c9e:	4770      	bx	lr

08000ca0 <__retarget_lock_release_recursive>:
 8000ca0:	4770      	bx	lr
	...

08000ca4 <_free_r>:
 8000ca4:	b570      	push	{r4, r5, r6, lr}
 8000ca6:	0005      	movs	r5, r0
 8000ca8:	1e0c      	subs	r4, r1, #0
 8000caa:	d010      	beq.n	8000cce <_free_r+0x2a>
 8000cac:	3c04      	subs	r4, #4
 8000cae:	6823      	ldr	r3, [r4, #0]
 8000cb0:	2b00      	cmp	r3, #0
 8000cb2:	da00      	bge.n	8000cb6 <_free_r+0x12>
 8000cb4:	18e4      	adds	r4, r4, r3
 8000cb6:	0028      	movs	r0, r5
 8000cb8:	f000 f8e0 	bl	8000e7c <__malloc_lock>
 8000cbc:	4a1d      	ldr	r2, [pc, #116]	@ (8000d34 <_free_r+0x90>)
 8000cbe:	6813      	ldr	r3, [r2, #0]
 8000cc0:	2b00      	cmp	r3, #0
 8000cc2:	d105      	bne.n	8000cd0 <_free_r+0x2c>
 8000cc4:	6063      	str	r3, [r4, #4]
 8000cc6:	6014      	str	r4, [r2, #0]
 8000cc8:	0028      	movs	r0, r5
 8000cca:	f000 f8df 	bl	8000e8c <__malloc_unlock>
 8000cce:	bd70      	pop	{r4, r5, r6, pc}
 8000cd0:	42a3      	cmp	r3, r4
 8000cd2:	d908      	bls.n	8000ce6 <_free_r+0x42>
 8000cd4:	6820      	ldr	r0, [r4, #0]
 8000cd6:	1821      	adds	r1, r4, r0
 8000cd8:	428b      	cmp	r3, r1
 8000cda:	d1f3      	bne.n	8000cc4 <_free_r+0x20>
 8000cdc:	6819      	ldr	r1, [r3, #0]
 8000cde:	685b      	ldr	r3, [r3, #4]
 8000ce0:	1809      	adds	r1, r1, r0
 8000ce2:	6021      	str	r1, [r4, #0]
 8000ce4:	e7ee      	b.n	8000cc4 <_free_r+0x20>
 8000ce6:	001a      	movs	r2, r3
 8000ce8:	685b      	ldr	r3, [r3, #4]
 8000cea:	2b00      	cmp	r3, #0
 8000cec:	d001      	beq.n	8000cf2 <_free_r+0x4e>
 8000cee:	42a3      	cmp	r3, r4
 8000cf0:	d9f9      	bls.n	8000ce6 <_free_r+0x42>
 8000cf2:	6811      	ldr	r1, [r2, #0]
 8000cf4:	1850      	adds	r0, r2, r1
 8000cf6:	42a0      	cmp	r0, r4
 8000cf8:	d10b      	bne.n	8000d12 <_free_r+0x6e>
 8000cfa:	6820      	ldr	r0, [r4, #0]
 8000cfc:	1809      	adds	r1, r1, r0
 8000cfe:	1850      	adds	r0, r2, r1
 8000d00:	6011      	str	r1, [r2, #0]
 8000d02:	4283      	cmp	r3, r0
 8000d04:	d1e0      	bne.n	8000cc8 <_free_r+0x24>
 8000d06:	6818      	ldr	r0, [r3, #0]
 8000d08:	685b      	ldr	r3, [r3, #4]
 8000d0a:	1841      	adds	r1, r0, r1
 8000d0c:	6011      	str	r1, [r2, #0]
 8000d0e:	6053      	str	r3, [r2, #4]
 8000d10:	e7da      	b.n	8000cc8 <_free_r+0x24>
 8000d12:	42a0      	cmp	r0, r4
 8000d14:	d902      	bls.n	8000d1c <_free_r+0x78>
 8000d16:	230c      	movs	r3, #12
 8000d18:	602b      	str	r3, [r5, #0]
 8000d1a:	e7d5      	b.n	8000cc8 <_free_r+0x24>
 8000d1c:	6820      	ldr	r0, [r4, #0]
 8000d1e:	1821      	adds	r1, r4, r0
 8000d20:	428b      	cmp	r3, r1
 8000d22:	d103      	bne.n	8000d2c <_free_r+0x88>
 8000d24:	6819      	ldr	r1, [r3, #0]
 8000d26:	685b      	ldr	r3, [r3, #4]
 8000d28:	1809      	adds	r1, r1, r0
 8000d2a:	6021      	str	r1, [r4, #0]
 8000d2c:	6063      	str	r3, [r4, #4]
 8000d2e:	6054      	str	r4, [r2, #4]
 8000d30:	e7ca      	b.n	8000cc8 <_free_r+0x24>
 8000d32:	46c0      	nop			@ (mov r8, r8)
 8000d34:	200002f8 	.word	0x200002f8

08000d38 <sbrk_aligned>:
 8000d38:	b570      	push	{r4, r5, r6, lr}
 8000d3a:	4e0f      	ldr	r6, [pc, #60]	@ (8000d78 <sbrk_aligned+0x40>)
 8000d3c:	000d      	movs	r5, r1
 8000d3e:	6831      	ldr	r1, [r6, #0]
 8000d40:	0004      	movs	r4, r0
 8000d42:	2900      	cmp	r1, #0
 8000d44:	d102      	bne.n	8000d4c <sbrk_aligned+0x14>
 8000d46:	f000 fcab 	bl	80016a0 <_sbrk_r>
 8000d4a:	6030      	str	r0, [r6, #0]
 8000d4c:	0029      	movs	r1, r5
 8000d4e:	0020      	movs	r0, r4
 8000d50:	f000 fca6 	bl	80016a0 <_sbrk_r>
 8000d54:	1c43      	adds	r3, r0, #1
 8000d56:	d103      	bne.n	8000d60 <sbrk_aligned+0x28>
 8000d58:	2501      	movs	r5, #1
 8000d5a:	426d      	negs	r5, r5
 8000d5c:	0028      	movs	r0, r5
 8000d5e:	bd70      	pop	{r4, r5, r6, pc}
 8000d60:	2303      	movs	r3, #3
 8000d62:	1cc5      	adds	r5, r0, #3
 8000d64:	439d      	bics	r5, r3
 8000d66:	42a8      	cmp	r0, r5
 8000d68:	d0f8      	beq.n	8000d5c <sbrk_aligned+0x24>
 8000d6a:	1a29      	subs	r1, r5, r0
 8000d6c:	0020      	movs	r0, r4
 8000d6e:	f000 fc97 	bl	80016a0 <_sbrk_r>
 8000d72:	3001      	adds	r0, #1
 8000d74:	d1f2      	bne.n	8000d5c <sbrk_aligned+0x24>
 8000d76:	e7ef      	b.n	8000d58 <sbrk_aligned+0x20>
 8000d78:	200002f4 	.word	0x200002f4

08000d7c <_malloc_r>:
 8000d7c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000d7e:	2203      	movs	r2, #3
 8000d80:	1ccb      	adds	r3, r1, #3
 8000d82:	4393      	bics	r3, r2
 8000d84:	3308      	adds	r3, #8
 8000d86:	0005      	movs	r5, r0
 8000d88:	001f      	movs	r7, r3
 8000d8a:	2b0c      	cmp	r3, #12
 8000d8c:	d234      	bcs.n	8000df8 <_malloc_r+0x7c>
 8000d8e:	270c      	movs	r7, #12
 8000d90:	42b9      	cmp	r1, r7
 8000d92:	d833      	bhi.n	8000dfc <_malloc_r+0x80>
 8000d94:	0028      	movs	r0, r5
 8000d96:	f000 f871 	bl	8000e7c <__malloc_lock>
 8000d9a:	4e37      	ldr	r6, [pc, #220]	@ (8000e78 <_malloc_r+0xfc>)
 8000d9c:	6833      	ldr	r3, [r6, #0]
 8000d9e:	001c      	movs	r4, r3
 8000da0:	2c00      	cmp	r4, #0
 8000da2:	d12f      	bne.n	8000e04 <_malloc_r+0x88>
 8000da4:	0039      	movs	r1, r7
 8000da6:	0028      	movs	r0, r5
 8000da8:	f7ff ffc6 	bl	8000d38 <sbrk_aligned>
 8000dac:	0004      	movs	r4, r0
 8000dae:	1c43      	adds	r3, r0, #1
 8000db0:	d15f      	bne.n	8000e72 <_malloc_r+0xf6>
 8000db2:	6834      	ldr	r4, [r6, #0]
 8000db4:	9400      	str	r4, [sp, #0]
 8000db6:	9b00      	ldr	r3, [sp, #0]
 8000db8:	2b00      	cmp	r3, #0
 8000dba:	d14a      	bne.n	8000e52 <_malloc_r+0xd6>
 8000dbc:	2c00      	cmp	r4, #0
 8000dbe:	d052      	beq.n	8000e66 <_malloc_r+0xea>
 8000dc0:	6823      	ldr	r3, [r4, #0]
 8000dc2:	0028      	movs	r0, r5
 8000dc4:	18e3      	adds	r3, r4, r3
 8000dc6:	9900      	ldr	r1, [sp, #0]
 8000dc8:	9301      	str	r3, [sp, #4]
 8000dca:	f000 fc69 	bl	80016a0 <_sbrk_r>
 8000dce:	9b01      	ldr	r3, [sp, #4]
 8000dd0:	4283      	cmp	r3, r0
 8000dd2:	d148      	bne.n	8000e66 <_malloc_r+0xea>
 8000dd4:	6823      	ldr	r3, [r4, #0]
 8000dd6:	0028      	movs	r0, r5
 8000dd8:	1aff      	subs	r7, r7, r3
 8000dda:	0039      	movs	r1, r7
 8000ddc:	f7ff ffac 	bl	8000d38 <sbrk_aligned>
 8000de0:	3001      	adds	r0, #1
 8000de2:	d040      	beq.n	8000e66 <_malloc_r+0xea>
 8000de4:	6823      	ldr	r3, [r4, #0]
 8000de6:	19db      	adds	r3, r3, r7
 8000de8:	6023      	str	r3, [r4, #0]
 8000dea:	6833      	ldr	r3, [r6, #0]
 8000dec:	685a      	ldr	r2, [r3, #4]
 8000dee:	2a00      	cmp	r2, #0
 8000df0:	d133      	bne.n	8000e5a <_malloc_r+0xde>
 8000df2:	9b00      	ldr	r3, [sp, #0]
 8000df4:	6033      	str	r3, [r6, #0]
 8000df6:	e019      	b.n	8000e2c <_malloc_r+0xb0>
 8000df8:	2b00      	cmp	r3, #0
 8000dfa:	dac9      	bge.n	8000d90 <_malloc_r+0x14>
 8000dfc:	230c      	movs	r3, #12
 8000dfe:	602b      	str	r3, [r5, #0]
 8000e00:	2000      	movs	r0, #0
 8000e02:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000e04:	6821      	ldr	r1, [r4, #0]
 8000e06:	1bc9      	subs	r1, r1, r7
 8000e08:	d420      	bmi.n	8000e4c <_malloc_r+0xd0>
 8000e0a:	290b      	cmp	r1, #11
 8000e0c:	d90a      	bls.n	8000e24 <_malloc_r+0xa8>
 8000e0e:	19e2      	adds	r2, r4, r7
 8000e10:	6027      	str	r7, [r4, #0]
 8000e12:	42a3      	cmp	r3, r4
 8000e14:	d104      	bne.n	8000e20 <_malloc_r+0xa4>
 8000e16:	6032      	str	r2, [r6, #0]
 8000e18:	6863      	ldr	r3, [r4, #4]
 8000e1a:	6011      	str	r1, [r2, #0]
 8000e1c:	6053      	str	r3, [r2, #4]
 8000e1e:	e005      	b.n	8000e2c <_malloc_r+0xb0>
 8000e20:	605a      	str	r2, [r3, #4]
 8000e22:	e7f9      	b.n	8000e18 <_malloc_r+0x9c>
 8000e24:	6862      	ldr	r2, [r4, #4]
 8000e26:	42a3      	cmp	r3, r4
 8000e28:	d10e      	bne.n	8000e48 <_malloc_r+0xcc>
 8000e2a:	6032      	str	r2, [r6, #0]
 8000e2c:	0028      	movs	r0, r5
 8000e2e:	f000 f82d 	bl	8000e8c <__malloc_unlock>
 8000e32:	0020      	movs	r0, r4
 8000e34:	2207      	movs	r2, #7
 8000e36:	300b      	adds	r0, #11
 8000e38:	1d23      	adds	r3, r4, #4
 8000e3a:	4390      	bics	r0, r2
 8000e3c:	1ac2      	subs	r2, r0, r3
 8000e3e:	4298      	cmp	r0, r3
 8000e40:	d0df      	beq.n	8000e02 <_malloc_r+0x86>
 8000e42:	1a1b      	subs	r3, r3, r0
 8000e44:	50a3      	str	r3, [r4, r2]
 8000e46:	e7dc      	b.n	8000e02 <_malloc_r+0x86>
 8000e48:	605a      	str	r2, [r3, #4]
 8000e4a:	e7ef      	b.n	8000e2c <_malloc_r+0xb0>
 8000e4c:	0023      	movs	r3, r4
 8000e4e:	6864      	ldr	r4, [r4, #4]
 8000e50:	e7a6      	b.n	8000da0 <_malloc_r+0x24>
 8000e52:	9c00      	ldr	r4, [sp, #0]
 8000e54:	6863      	ldr	r3, [r4, #4]
 8000e56:	9300      	str	r3, [sp, #0]
 8000e58:	e7ad      	b.n	8000db6 <_malloc_r+0x3a>
 8000e5a:	001a      	movs	r2, r3
 8000e5c:	685b      	ldr	r3, [r3, #4]
 8000e5e:	42a3      	cmp	r3, r4
 8000e60:	d1fb      	bne.n	8000e5a <_malloc_r+0xde>
 8000e62:	2300      	movs	r3, #0
 8000e64:	e7da      	b.n	8000e1c <_malloc_r+0xa0>
 8000e66:	230c      	movs	r3, #12
 8000e68:	0028      	movs	r0, r5
 8000e6a:	602b      	str	r3, [r5, #0]
 8000e6c:	f000 f80e 	bl	8000e8c <__malloc_unlock>
 8000e70:	e7c6      	b.n	8000e00 <_malloc_r+0x84>
 8000e72:	6007      	str	r7, [r0, #0]
 8000e74:	e7da      	b.n	8000e2c <_malloc_r+0xb0>
 8000e76:	46c0      	nop			@ (mov r8, r8)
 8000e78:	200002f8 	.word	0x200002f8

08000e7c <__malloc_lock>:
 8000e7c:	b510      	push	{r4, lr}
 8000e7e:	4802      	ldr	r0, [pc, #8]	@ (8000e88 <__malloc_lock+0xc>)
 8000e80:	f7ff ff0d 	bl	8000c9e <__retarget_lock_acquire_recursive>
 8000e84:	bd10      	pop	{r4, pc}
 8000e86:	46c0      	nop			@ (mov r8, r8)
 8000e88:	200002f0 	.word	0x200002f0

08000e8c <__malloc_unlock>:
 8000e8c:	b510      	push	{r4, lr}
 8000e8e:	4802      	ldr	r0, [pc, #8]	@ (8000e98 <__malloc_unlock+0xc>)
 8000e90:	f7ff ff06 	bl	8000ca0 <__retarget_lock_release_recursive>
 8000e94:	bd10      	pop	{r4, pc}
 8000e96:	46c0      	nop			@ (mov r8, r8)
 8000e98:	200002f0 	.word	0x200002f0

08000e9c <__sfputc_r>:
 8000e9c:	6893      	ldr	r3, [r2, #8]
 8000e9e:	b510      	push	{r4, lr}
 8000ea0:	3b01      	subs	r3, #1
 8000ea2:	6093      	str	r3, [r2, #8]
 8000ea4:	2b00      	cmp	r3, #0
 8000ea6:	da04      	bge.n	8000eb2 <__sfputc_r+0x16>
 8000ea8:	6994      	ldr	r4, [r2, #24]
 8000eaa:	42a3      	cmp	r3, r4
 8000eac:	db07      	blt.n	8000ebe <__sfputc_r+0x22>
 8000eae:	290a      	cmp	r1, #10
 8000eb0:	d005      	beq.n	8000ebe <__sfputc_r+0x22>
 8000eb2:	6813      	ldr	r3, [r2, #0]
 8000eb4:	1c58      	adds	r0, r3, #1
 8000eb6:	6010      	str	r0, [r2, #0]
 8000eb8:	7019      	strb	r1, [r3, #0]
 8000eba:	0008      	movs	r0, r1
 8000ebc:	bd10      	pop	{r4, pc}
 8000ebe:	f7ff fdcd 	bl	8000a5c <__swbuf_r>
 8000ec2:	0001      	movs	r1, r0
 8000ec4:	e7f9      	b.n	8000eba <__sfputc_r+0x1e>

08000ec6 <__sfputs_r>:
 8000ec6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ec8:	0006      	movs	r6, r0
 8000eca:	000f      	movs	r7, r1
 8000ecc:	0014      	movs	r4, r2
 8000ece:	18d5      	adds	r5, r2, r3
 8000ed0:	42ac      	cmp	r4, r5
 8000ed2:	d101      	bne.n	8000ed8 <__sfputs_r+0x12>
 8000ed4:	2000      	movs	r0, #0
 8000ed6:	e007      	b.n	8000ee8 <__sfputs_r+0x22>
 8000ed8:	7821      	ldrb	r1, [r4, #0]
 8000eda:	003a      	movs	r2, r7
 8000edc:	0030      	movs	r0, r6
 8000ede:	f7ff ffdd 	bl	8000e9c <__sfputc_r>
 8000ee2:	3401      	adds	r4, #1
 8000ee4:	1c43      	adds	r3, r0, #1
 8000ee6:	d1f3      	bne.n	8000ed0 <__sfputs_r+0xa>
 8000ee8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000eec <_vfiprintf_r>:
 8000eec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000eee:	b0a1      	sub	sp, #132	@ 0x84
 8000ef0:	000f      	movs	r7, r1
 8000ef2:	0015      	movs	r5, r2
 8000ef4:	001e      	movs	r6, r3
 8000ef6:	9003      	str	r0, [sp, #12]
 8000ef8:	2800      	cmp	r0, #0
 8000efa:	d004      	beq.n	8000f06 <_vfiprintf_r+0x1a>
 8000efc:	6a03      	ldr	r3, [r0, #32]
 8000efe:	2b00      	cmp	r3, #0
 8000f00:	d101      	bne.n	8000f06 <_vfiprintf_r+0x1a>
 8000f02:	f7ff fcbb 	bl	800087c <__sinit>
 8000f06:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8000f08:	07db      	lsls	r3, r3, #31
 8000f0a:	d405      	bmi.n	8000f18 <_vfiprintf_r+0x2c>
 8000f0c:	89bb      	ldrh	r3, [r7, #12]
 8000f0e:	059b      	lsls	r3, r3, #22
 8000f10:	d402      	bmi.n	8000f18 <_vfiprintf_r+0x2c>
 8000f12:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8000f14:	f7ff fec3 	bl	8000c9e <__retarget_lock_acquire_recursive>
 8000f18:	89bb      	ldrh	r3, [r7, #12]
 8000f1a:	071b      	lsls	r3, r3, #28
 8000f1c:	d502      	bpl.n	8000f24 <_vfiprintf_r+0x38>
 8000f1e:	693b      	ldr	r3, [r7, #16]
 8000f20:	2b00      	cmp	r3, #0
 8000f22:	d113      	bne.n	8000f4c <_vfiprintf_r+0x60>
 8000f24:	0039      	movs	r1, r7
 8000f26:	9803      	ldr	r0, [sp, #12]
 8000f28:	f7ff fdda 	bl	8000ae0 <__swsetup_r>
 8000f2c:	2800      	cmp	r0, #0
 8000f2e:	d00d      	beq.n	8000f4c <_vfiprintf_r+0x60>
 8000f30:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8000f32:	07db      	lsls	r3, r3, #31
 8000f34:	d503      	bpl.n	8000f3e <_vfiprintf_r+0x52>
 8000f36:	2001      	movs	r0, #1
 8000f38:	4240      	negs	r0, r0
 8000f3a:	b021      	add	sp, #132	@ 0x84
 8000f3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000f3e:	89bb      	ldrh	r3, [r7, #12]
 8000f40:	059b      	lsls	r3, r3, #22
 8000f42:	d4f8      	bmi.n	8000f36 <_vfiprintf_r+0x4a>
 8000f44:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8000f46:	f7ff feab 	bl	8000ca0 <__retarget_lock_release_recursive>
 8000f4a:	e7f4      	b.n	8000f36 <_vfiprintf_r+0x4a>
 8000f4c:	2300      	movs	r3, #0
 8000f4e:	ac08      	add	r4, sp, #32
 8000f50:	6163      	str	r3, [r4, #20]
 8000f52:	3320      	adds	r3, #32
 8000f54:	7663      	strb	r3, [r4, #25]
 8000f56:	3310      	adds	r3, #16
 8000f58:	76a3      	strb	r3, [r4, #26]
 8000f5a:	9607      	str	r6, [sp, #28]
 8000f5c:	002e      	movs	r6, r5
 8000f5e:	7833      	ldrb	r3, [r6, #0]
 8000f60:	2b00      	cmp	r3, #0
 8000f62:	d001      	beq.n	8000f68 <_vfiprintf_r+0x7c>
 8000f64:	2b25      	cmp	r3, #37	@ 0x25
 8000f66:	d148      	bne.n	8000ffa <_vfiprintf_r+0x10e>
 8000f68:	1b73      	subs	r3, r6, r5
 8000f6a:	9305      	str	r3, [sp, #20]
 8000f6c:	42ae      	cmp	r6, r5
 8000f6e:	d00b      	beq.n	8000f88 <_vfiprintf_r+0x9c>
 8000f70:	002a      	movs	r2, r5
 8000f72:	0039      	movs	r1, r7
 8000f74:	9803      	ldr	r0, [sp, #12]
 8000f76:	f7ff ffa6 	bl	8000ec6 <__sfputs_r>
 8000f7a:	3001      	adds	r0, #1
 8000f7c:	d100      	bne.n	8000f80 <_vfiprintf_r+0x94>
 8000f7e:	e0ae      	b.n	80010de <_vfiprintf_r+0x1f2>
 8000f80:	6963      	ldr	r3, [r4, #20]
 8000f82:	9a05      	ldr	r2, [sp, #20]
 8000f84:	189b      	adds	r3, r3, r2
 8000f86:	6163      	str	r3, [r4, #20]
 8000f88:	7833      	ldrb	r3, [r6, #0]
 8000f8a:	2b00      	cmp	r3, #0
 8000f8c:	d100      	bne.n	8000f90 <_vfiprintf_r+0xa4>
 8000f8e:	e0a6      	b.n	80010de <_vfiprintf_r+0x1f2>
 8000f90:	2201      	movs	r2, #1
 8000f92:	2300      	movs	r3, #0
 8000f94:	4252      	negs	r2, r2
 8000f96:	6062      	str	r2, [r4, #4]
 8000f98:	a904      	add	r1, sp, #16
 8000f9a:	3254      	adds	r2, #84	@ 0x54
 8000f9c:	1852      	adds	r2, r2, r1
 8000f9e:	1c75      	adds	r5, r6, #1
 8000fa0:	6023      	str	r3, [r4, #0]
 8000fa2:	60e3      	str	r3, [r4, #12]
 8000fa4:	60a3      	str	r3, [r4, #8]
 8000fa6:	7013      	strb	r3, [r2, #0]
 8000fa8:	65a3      	str	r3, [r4, #88]	@ 0x58
 8000faa:	4b59      	ldr	r3, [pc, #356]	@ (8001110 <_vfiprintf_r+0x224>)
 8000fac:	2205      	movs	r2, #5
 8000fae:	0018      	movs	r0, r3
 8000fb0:	7829      	ldrb	r1, [r5, #0]
 8000fb2:	9305      	str	r3, [sp, #20]
 8000fb4:	f000 fb86 	bl	80016c4 <memchr>
 8000fb8:	1c6e      	adds	r6, r5, #1
 8000fba:	2800      	cmp	r0, #0
 8000fbc:	d11f      	bne.n	8000ffe <_vfiprintf_r+0x112>
 8000fbe:	6822      	ldr	r2, [r4, #0]
 8000fc0:	06d3      	lsls	r3, r2, #27
 8000fc2:	d504      	bpl.n	8000fce <_vfiprintf_r+0xe2>
 8000fc4:	2353      	movs	r3, #83	@ 0x53
 8000fc6:	a904      	add	r1, sp, #16
 8000fc8:	185b      	adds	r3, r3, r1
 8000fca:	2120      	movs	r1, #32
 8000fcc:	7019      	strb	r1, [r3, #0]
 8000fce:	0713      	lsls	r3, r2, #28
 8000fd0:	d504      	bpl.n	8000fdc <_vfiprintf_r+0xf0>
 8000fd2:	2353      	movs	r3, #83	@ 0x53
 8000fd4:	a904      	add	r1, sp, #16
 8000fd6:	185b      	adds	r3, r3, r1
 8000fd8:	212b      	movs	r1, #43	@ 0x2b
 8000fda:	7019      	strb	r1, [r3, #0]
 8000fdc:	782b      	ldrb	r3, [r5, #0]
 8000fde:	2b2a      	cmp	r3, #42	@ 0x2a
 8000fe0:	d016      	beq.n	8001010 <_vfiprintf_r+0x124>
 8000fe2:	002e      	movs	r6, r5
 8000fe4:	2100      	movs	r1, #0
 8000fe6:	200a      	movs	r0, #10
 8000fe8:	68e3      	ldr	r3, [r4, #12]
 8000fea:	7832      	ldrb	r2, [r6, #0]
 8000fec:	1c75      	adds	r5, r6, #1
 8000fee:	3a30      	subs	r2, #48	@ 0x30
 8000ff0:	2a09      	cmp	r2, #9
 8000ff2:	d950      	bls.n	8001096 <_vfiprintf_r+0x1aa>
 8000ff4:	2900      	cmp	r1, #0
 8000ff6:	d111      	bne.n	800101c <_vfiprintf_r+0x130>
 8000ff8:	e017      	b.n	800102a <_vfiprintf_r+0x13e>
 8000ffa:	3601      	adds	r6, #1
 8000ffc:	e7af      	b.n	8000f5e <_vfiprintf_r+0x72>
 8000ffe:	9b05      	ldr	r3, [sp, #20]
 8001000:	6822      	ldr	r2, [r4, #0]
 8001002:	1ac0      	subs	r0, r0, r3
 8001004:	2301      	movs	r3, #1
 8001006:	4083      	lsls	r3, r0
 8001008:	4313      	orrs	r3, r2
 800100a:	0035      	movs	r5, r6
 800100c:	6023      	str	r3, [r4, #0]
 800100e:	e7cc      	b.n	8000faa <_vfiprintf_r+0xbe>
 8001010:	9b07      	ldr	r3, [sp, #28]
 8001012:	1d19      	adds	r1, r3, #4
 8001014:	681b      	ldr	r3, [r3, #0]
 8001016:	9107      	str	r1, [sp, #28]
 8001018:	2b00      	cmp	r3, #0
 800101a:	db01      	blt.n	8001020 <_vfiprintf_r+0x134>
 800101c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800101e:	e004      	b.n	800102a <_vfiprintf_r+0x13e>
 8001020:	425b      	negs	r3, r3
 8001022:	60e3      	str	r3, [r4, #12]
 8001024:	2302      	movs	r3, #2
 8001026:	4313      	orrs	r3, r2
 8001028:	6023      	str	r3, [r4, #0]
 800102a:	7833      	ldrb	r3, [r6, #0]
 800102c:	2b2e      	cmp	r3, #46	@ 0x2e
 800102e:	d10c      	bne.n	800104a <_vfiprintf_r+0x15e>
 8001030:	7873      	ldrb	r3, [r6, #1]
 8001032:	2b2a      	cmp	r3, #42	@ 0x2a
 8001034:	d134      	bne.n	80010a0 <_vfiprintf_r+0x1b4>
 8001036:	9b07      	ldr	r3, [sp, #28]
 8001038:	3602      	adds	r6, #2
 800103a:	1d1a      	adds	r2, r3, #4
 800103c:	681b      	ldr	r3, [r3, #0]
 800103e:	9207      	str	r2, [sp, #28]
 8001040:	2b00      	cmp	r3, #0
 8001042:	da01      	bge.n	8001048 <_vfiprintf_r+0x15c>
 8001044:	2301      	movs	r3, #1
 8001046:	425b      	negs	r3, r3
 8001048:	9309      	str	r3, [sp, #36]	@ 0x24
 800104a:	4d32      	ldr	r5, [pc, #200]	@ (8001114 <_vfiprintf_r+0x228>)
 800104c:	2203      	movs	r2, #3
 800104e:	0028      	movs	r0, r5
 8001050:	7831      	ldrb	r1, [r6, #0]
 8001052:	f000 fb37 	bl	80016c4 <memchr>
 8001056:	2800      	cmp	r0, #0
 8001058:	d006      	beq.n	8001068 <_vfiprintf_r+0x17c>
 800105a:	2340      	movs	r3, #64	@ 0x40
 800105c:	1b40      	subs	r0, r0, r5
 800105e:	4083      	lsls	r3, r0
 8001060:	6822      	ldr	r2, [r4, #0]
 8001062:	3601      	adds	r6, #1
 8001064:	4313      	orrs	r3, r2
 8001066:	6023      	str	r3, [r4, #0]
 8001068:	7831      	ldrb	r1, [r6, #0]
 800106a:	2206      	movs	r2, #6
 800106c:	482a      	ldr	r0, [pc, #168]	@ (8001118 <_vfiprintf_r+0x22c>)
 800106e:	1c75      	adds	r5, r6, #1
 8001070:	7621      	strb	r1, [r4, #24]
 8001072:	f000 fb27 	bl	80016c4 <memchr>
 8001076:	2800      	cmp	r0, #0
 8001078:	d040      	beq.n	80010fc <_vfiprintf_r+0x210>
 800107a:	4b28      	ldr	r3, [pc, #160]	@ (800111c <_vfiprintf_r+0x230>)
 800107c:	2b00      	cmp	r3, #0
 800107e:	d122      	bne.n	80010c6 <_vfiprintf_r+0x1da>
 8001080:	2207      	movs	r2, #7
 8001082:	9b07      	ldr	r3, [sp, #28]
 8001084:	3307      	adds	r3, #7
 8001086:	4393      	bics	r3, r2
 8001088:	3308      	adds	r3, #8
 800108a:	9307      	str	r3, [sp, #28]
 800108c:	6963      	ldr	r3, [r4, #20]
 800108e:	9a04      	ldr	r2, [sp, #16]
 8001090:	189b      	adds	r3, r3, r2
 8001092:	6163      	str	r3, [r4, #20]
 8001094:	e762      	b.n	8000f5c <_vfiprintf_r+0x70>
 8001096:	4343      	muls	r3, r0
 8001098:	002e      	movs	r6, r5
 800109a:	2101      	movs	r1, #1
 800109c:	189b      	adds	r3, r3, r2
 800109e:	e7a4      	b.n	8000fea <_vfiprintf_r+0xfe>
 80010a0:	2300      	movs	r3, #0
 80010a2:	200a      	movs	r0, #10
 80010a4:	0019      	movs	r1, r3
 80010a6:	3601      	adds	r6, #1
 80010a8:	6063      	str	r3, [r4, #4]
 80010aa:	7832      	ldrb	r2, [r6, #0]
 80010ac:	1c75      	adds	r5, r6, #1
 80010ae:	3a30      	subs	r2, #48	@ 0x30
 80010b0:	2a09      	cmp	r2, #9
 80010b2:	d903      	bls.n	80010bc <_vfiprintf_r+0x1d0>
 80010b4:	2b00      	cmp	r3, #0
 80010b6:	d0c8      	beq.n	800104a <_vfiprintf_r+0x15e>
 80010b8:	9109      	str	r1, [sp, #36]	@ 0x24
 80010ba:	e7c6      	b.n	800104a <_vfiprintf_r+0x15e>
 80010bc:	4341      	muls	r1, r0
 80010be:	002e      	movs	r6, r5
 80010c0:	2301      	movs	r3, #1
 80010c2:	1889      	adds	r1, r1, r2
 80010c4:	e7f1      	b.n	80010aa <_vfiprintf_r+0x1be>
 80010c6:	aa07      	add	r2, sp, #28
 80010c8:	9200      	str	r2, [sp, #0]
 80010ca:	0021      	movs	r1, r4
 80010cc:	003a      	movs	r2, r7
 80010ce:	4b14      	ldr	r3, [pc, #80]	@ (8001120 <_vfiprintf_r+0x234>)
 80010d0:	9803      	ldr	r0, [sp, #12]
 80010d2:	e000      	b.n	80010d6 <_vfiprintf_r+0x1ea>
 80010d4:	bf00      	nop
 80010d6:	9004      	str	r0, [sp, #16]
 80010d8:	9b04      	ldr	r3, [sp, #16]
 80010da:	3301      	adds	r3, #1
 80010dc:	d1d6      	bne.n	800108c <_vfiprintf_r+0x1a0>
 80010de:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80010e0:	07db      	lsls	r3, r3, #31
 80010e2:	d405      	bmi.n	80010f0 <_vfiprintf_r+0x204>
 80010e4:	89bb      	ldrh	r3, [r7, #12]
 80010e6:	059b      	lsls	r3, r3, #22
 80010e8:	d402      	bmi.n	80010f0 <_vfiprintf_r+0x204>
 80010ea:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 80010ec:	f7ff fdd8 	bl	8000ca0 <__retarget_lock_release_recursive>
 80010f0:	89bb      	ldrh	r3, [r7, #12]
 80010f2:	065b      	lsls	r3, r3, #25
 80010f4:	d500      	bpl.n	80010f8 <_vfiprintf_r+0x20c>
 80010f6:	e71e      	b.n	8000f36 <_vfiprintf_r+0x4a>
 80010f8:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80010fa:	e71e      	b.n	8000f3a <_vfiprintf_r+0x4e>
 80010fc:	aa07      	add	r2, sp, #28
 80010fe:	9200      	str	r2, [sp, #0]
 8001100:	0021      	movs	r1, r4
 8001102:	003a      	movs	r2, r7
 8001104:	4b06      	ldr	r3, [pc, #24]	@ (8001120 <_vfiprintf_r+0x234>)
 8001106:	9803      	ldr	r0, [sp, #12]
 8001108:	f000 f87c 	bl	8001204 <_printf_i>
 800110c:	e7e3      	b.n	80010d6 <_vfiprintf_r+0x1ea>
 800110e:	46c0      	nop			@ (mov r8, r8)
 8001110:	080016ff 	.word	0x080016ff
 8001114:	08001705 	.word	0x08001705
 8001118:	08001709 	.word	0x08001709
 800111c:	00000000 	.word	0x00000000
 8001120:	08000ec7 	.word	0x08000ec7

08001124 <_printf_common>:
 8001124:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001126:	0016      	movs	r6, r2
 8001128:	9301      	str	r3, [sp, #4]
 800112a:	688a      	ldr	r2, [r1, #8]
 800112c:	690b      	ldr	r3, [r1, #16]
 800112e:	000c      	movs	r4, r1
 8001130:	9000      	str	r0, [sp, #0]
 8001132:	4293      	cmp	r3, r2
 8001134:	da00      	bge.n	8001138 <_printf_common+0x14>
 8001136:	0013      	movs	r3, r2
 8001138:	0022      	movs	r2, r4
 800113a:	6033      	str	r3, [r6, #0]
 800113c:	3243      	adds	r2, #67	@ 0x43
 800113e:	7812      	ldrb	r2, [r2, #0]
 8001140:	2a00      	cmp	r2, #0
 8001142:	d001      	beq.n	8001148 <_printf_common+0x24>
 8001144:	3301      	adds	r3, #1
 8001146:	6033      	str	r3, [r6, #0]
 8001148:	6823      	ldr	r3, [r4, #0]
 800114a:	069b      	lsls	r3, r3, #26
 800114c:	d502      	bpl.n	8001154 <_printf_common+0x30>
 800114e:	6833      	ldr	r3, [r6, #0]
 8001150:	3302      	adds	r3, #2
 8001152:	6033      	str	r3, [r6, #0]
 8001154:	6822      	ldr	r2, [r4, #0]
 8001156:	2306      	movs	r3, #6
 8001158:	0015      	movs	r5, r2
 800115a:	401d      	ands	r5, r3
 800115c:	421a      	tst	r2, r3
 800115e:	d027      	beq.n	80011b0 <_printf_common+0x8c>
 8001160:	0023      	movs	r3, r4
 8001162:	3343      	adds	r3, #67	@ 0x43
 8001164:	781b      	ldrb	r3, [r3, #0]
 8001166:	1e5a      	subs	r2, r3, #1
 8001168:	4193      	sbcs	r3, r2
 800116a:	6822      	ldr	r2, [r4, #0]
 800116c:	0692      	lsls	r2, r2, #26
 800116e:	d430      	bmi.n	80011d2 <_printf_common+0xae>
 8001170:	0022      	movs	r2, r4
 8001172:	9901      	ldr	r1, [sp, #4]
 8001174:	9800      	ldr	r0, [sp, #0]
 8001176:	9d08      	ldr	r5, [sp, #32]
 8001178:	3243      	adds	r2, #67	@ 0x43
 800117a:	47a8      	blx	r5
 800117c:	3001      	adds	r0, #1
 800117e:	d025      	beq.n	80011cc <_printf_common+0xa8>
 8001180:	2206      	movs	r2, #6
 8001182:	6823      	ldr	r3, [r4, #0]
 8001184:	2500      	movs	r5, #0
 8001186:	4013      	ands	r3, r2
 8001188:	2b04      	cmp	r3, #4
 800118a:	d105      	bne.n	8001198 <_printf_common+0x74>
 800118c:	6833      	ldr	r3, [r6, #0]
 800118e:	68e5      	ldr	r5, [r4, #12]
 8001190:	1aed      	subs	r5, r5, r3
 8001192:	43eb      	mvns	r3, r5
 8001194:	17db      	asrs	r3, r3, #31
 8001196:	401d      	ands	r5, r3
 8001198:	68a3      	ldr	r3, [r4, #8]
 800119a:	6922      	ldr	r2, [r4, #16]
 800119c:	4293      	cmp	r3, r2
 800119e:	dd01      	ble.n	80011a4 <_printf_common+0x80>
 80011a0:	1a9b      	subs	r3, r3, r2
 80011a2:	18ed      	adds	r5, r5, r3
 80011a4:	2600      	movs	r6, #0
 80011a6:	42b5      	cmp	r5, r6
 80011a8:	d120      	bne.n	80011ec <_printf_common+0xc8>
 80011aa:	2000      	movs	r0, #0
 80011ac:	e010      	b.n	80011d0 <_printf_common+0xac>
 80011ae:	3501      	adds	r5, #1
 80011b0:	68e3      	ldr	r3, [r4, #12]
 80011b2:	6832      	ldr	r2, [r6, #0]
 80011b4:	1a9b      	subs	r3, r3, r2
 80011b6:	42ab      	cmp	r3, r5
 80011b8:	ddd2      	ble.n	8001160 <_printf_common+0x3c>
 80011ba:	0022      	movs	r2, r4
 80011bc:	2301      	movs	r3, #1
 80011be:	9901      	ldr	r1, [sp, #4]
 80011c0:	9800      	ldr	r0, [sp, #0]
 80011c2:	9f08      	ldr	r7, [sp, #32]
 80011c4:	3219      	adds	r2, #25
 80011c6:	47b8      	blx	r7
 80011c8:	3001      	adds	r0, #1
 80011ca:	d1f0      	bne.n	80011ae <_printf_common+0x8a>
 80011cc:	2001      	movs	r0, #1
 80011ce:	4240      	negs	r0, r0
 80011d0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80011d2:	2030      	movs	r0, #48	@ 0x30
 80011d4:	18e1      	adds	r1, r4, r3
 80011d6:	3143      	adds	r1, #67	@ 0x43
 80011d8:	7008      	strb	r0, [r1, #0]
 80011da:	0021      	movs	r1, r4
 80011dc:	1c5a      	adds	r2, r3, #1
 80011de:	3145      	adds	r1, #69	@ 0x45
 80011e0:	7809      	ldrb	r1, [r1, #0]
 80011e2:	18a2      	adds	r2, r4, r2
 80011e4:	3243      	adds	r2, #67	@ 0x43
 80011e6:	3302      	adds	r3, #2
 80011e8:	7011      	strb	r1, [r2, #0]
 80011ea:	e7c1      	b.n	8001170 <_printf_common+0x4c>
 80011ec:	0022      	movs	r2, r4
 80011ee:	2301      	movs	r3, #1
 80011f0:	9901      	ldr	r1, [sp, #4]
 80011f2:	9800      	ldr	r0, [sp, #0]
 80011f4:	9f08      	ldr	r7, [sp, #32]
 80011f6:	321a      	adds	r2, #26
 80011f8:	47b8      	blx	r7
 80011fa:	3001      	adds	r0, #1
 80011fc:	d0e6      	beq.n	80011cc <_printf_common+0xa8>
 80011fe:	3601      	adds	r6, #1
 8001200:	e7d1      	b.n	80011a6 <_printf_common+0x82>
	...

08001204 <_printf_i>:
 8001204:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001206:	b08b      	sub	sp, #44	@ 0x2c
 8001208:	9206      	str	r2, [sp, #24]
 800120a:	000a      	movs	r2, r1
 800120c:	3243      	adds	r2, #67	@ 0x43
 800120e:	9307      	str	r3, [sp, #28]
 8001210:	9005      	str	r0, [sp, #20]
 8001212:	9203      	str	r2, [sp, #12]
 8001214:	7e0a      	ldrb	r2, [r1, #24]
 8001216:	000c      	movs	r4, r1
 8001218:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800121a:	2a78      	cmp	r2, #120	@ 0x78
 800121c:	d809      	bhi.n	8001232 <_printf_i+0x2e>
 800121e:	2a62      	cmp	r2, #98	@ 0x62
 8001220:	d80b      	bhi.n	800123a <_printf_i+0x36>
 8001222:	2a00      	cmp	r2, #0
 8001224:	d100      	bne.n	8001228 <_printf_i+0x24>
 8001226:	e0ba      	b.n	800139e <_printf_i+0x19a>
 8001228:	497a      	ldr	r1, [pc, #488]	@ (8001414 <_printf_i+0x210>)
 800122a:	9104      	str	r1, [sp, #16]
 800122c:	2a58      	cmp	r2, #88	@ 0x58
 800122e:	d100      	bne.n	8001232 <_printf_i+0x2e>
 8001230:	e08e      	b.n	8001350 <_printf_i+0x14c>
 8001232:	0025      	movs	r5, r4
 8001234:	3542      	adds	r5, #66	@ 0x42
 8001236:	702a      	strb	r2, [r5, #0]
 8001238:	e022      	b.n	8001280 <_printf_i+0x7c>
 800123a:	0010      	movs	r0, r2
 800123c:	3863      	subs	r0, #99	@ 0x63
 800123e:	2815      	cmp	r0, #21
 8001240:	d8f7      	bhi.n	8001232 <_printf_i+0x2e>
 8001242:	f7fe ff61 	bl	8000108 <__gnu_thumb1_case_shi>
 8001246:	0016      	.short	0x0016
 8001248:	fff6001f 	.word	0xfff6001f
 800124c:	fff6fff6 	.word	0xfff6fff6
 8001250:	001ffff6 	.word	0x001ffff6
 8001254:	fff6fff6 	.word	0xfff6fff6
 8001258:	fff6fff6 	.word	0xfff6fff6
 800125c:	0036009f 	.word	0x0036009f
 8001260:	fff6007e 	.word	0xfff6007e
 8001264:	00b0fff6 	.word	0x00b0fff6
 8001268:	0036fff6 	.word	0x0036fff6
 800126c:	fff6fff6 	.word	0xfff6fff6
 8001270:	0082      	.short	0x0082
 8001272:	0025      	movs	r5, r4
 8001274:	681a      	ldr	r2, [r3, #0]
 8001276:	3542      	adds	r5, #66	@ 0x42
 8001278:	1d11      	adds	r1, r2, #4
 800127a:	6019      	str	r1, [r3, #0]
 800127c:	6813      	ldr	r3, [r2, #0]
 800127e:	702b      	strb	r3, [r5, #0]
 8001280:	2301      	movs	r3, #1
 8001282:	e09e      	b.n	80013c2 <_printf_i+0x1be>
 8001284:	6818      	ldr	r0, [r3, #0]
 8001286:	6809      	ldr	r1, [r1, #0]
 8001288:	1d02      	adds	r2, r0, #4
 800128a:	060d      	lsls	r5, r1, #24
 800128c:	d50b      	bpl.n	80012a6 <_printf_i+0xa2>
 800128e:	6806      	ldr	r6, [r0, #0]
 8001290:	601a      	str	r2, [r3, #0]
 8001292:	2e00      	cmp	r6, #0
 8001294:	da03      	bge.n	800129e <_printf_i+0x9a>
 8001296:	232d      	movs	r3, #45	@ 0x2d
 8001298:	9a03      	ldr	r2, [sp, #12]
 800129a:	4276      	negs	r6, r6
 800129c:	7013      	strb	r3, [r2, #0]
 800129e:	4b5d      	ldr	r3, [pc, #372]	@ (8001414 <_printf_i+0x210>)
 80012a0:	270a      	movs	r7, #10
 80012a2:	9304      	str	r3, [sp, #16]
 80012a4:	e018      	b.n	80012d8 <_printf_i+0xd4>
 80012a6:	6806      	ldr	r6, [r0, #0]
 80012a8:	601a      	str	r2, [r3, #0]
 80012aa:	0649      	lsls	r1, r1, #25
 80012ac:	d5f1      	bpl.n	8001292 <_printf_i+0x8e>
 80012ae:	b236      	sxth	r6, r6
 80012b0:	e7ef      	b.n	8001292 <_printf_i+0x8e>
 80012b2:	6808      	ldr	r0, [r1, #0]
 80012b4:	6819      	ldr	r1, [r3, #0]
 80012b6:	c940      	ldmia	r1!, {r6}
 80012b8:	0605      	lsls	r5, r0, #24
 80012ba:	d402      	bmi.n	80012c2 <_printf_i+0xbe>
 80012bc:	0640      	lsls	r0, r0, #25
 80012be:	d500      	bpl.n	80012c2 <_printf_i+0xbe>
 80012c0:	b2b6      	uxth	r6, r6
 80012c2:	6019      	str	r1, [r3, #0]
 80012c4:	4b53      	ldr	r3, [pc, #332]	@ (8001414 <_printf_i+0x210>)
 80012c6:	270a      	movs	r7, #10
 80012c8:	9304      	str	r3, [sp, #16]
 80012ca:	2a6f      	cmp	r2, #111	@ 0x6f
 80012cc:	d100      	bne.n	80012d0 <_printf_i+0xcc>
 80012ce:	3f02      	subs	r7, #2
 80012d0:	0023      	movs	r3, r4
 80012d2:	2200      	movs	r2, #0
 80012d4:	3343      	adds	r3, #67	@ 0x43
 80012d6:	701a      	strb	r2, [r3, #0]
 80012d8:	6863      	ldr	r3, [r4, #4]
 80012da:	60a3      	str	r3, [r4, #8]
 80012dc:	2b00      	cmp	r3, #0
 80012de:	db06      	blt.n	80012ee <_printf_i+0xea>
 80012e0:	2104      	movs	r1, #4
 80012e2:	6822      	ldr	r2, [r4, #0]
 80012e4:	9d03      	ldr	r5, [sp, #12]
 80012e6:	438a      	bics	r2, r1
 80012e8:	6022      	str	r2, [r4, #0]
 80012ea:	4333      	orrs	r3, r6
 80012ec:	d00c      	beq.n	8001308 <_printf_i+0x104>
 80012ee:	9d03      	ldr	r5, [sp, #12]
 80012f0:	0030      	movs	r0, r6
 80012f2:	0039      	movs	r1, r7
 80012f4:	f7fe ff98 	bl	8000228 <__aeabi_uidivmod>
 80012f8:	9b04      	ldr	r3, [sp, #16]
 80012fa:	3d01      	subs	r5, #1
 80012fc:	5c5b      	ldrb	r3, [r3, r1]
 80012fe:	702b      	strb	r3, [r5, #0]
 8001300:	0033      	movs	r3, r6
 8001302:	0006      	movs	r6, r0
 8001304:	429f      	cmp	r7, r3
 8001306:	d9f3      	bls.n	80012f0 <_printf_i+0xec>
 8001308:	2f08      	cmp	r7, #8
 800130a:	d109      	bne.n	8001320 <_printf_i+0x11c>
 800130c:	6823      	ldr	r3, [r4, #0]
 800130e:	07db      	lsls	r3, r3, #31
 8001310:	d506      	bpl.n	8001320 <_printf_i+0x11c>
 8001312:	6862      	ldr	r2, [r4, #4]
 8001314:	6923      	ldr	r3, [r4, #16]
 8001316:	429a      	cmp	r2, r3
 8001318:	dc02      	bgt.n	8001320 <_printf_i+0x11c>
 800131a:	2330      	movs	r3, #48	@ 0x30
 800131c:	3d01      	subs	r5, #1
 800131e:	702b      	strb	r3, [r5, #0]
 8001320:	9b03      	ldr	r3, [sp, #12]
 8001322:	1b5b      	subs	r3, r3, r5
 8001324:	6123      	str	r3, [r4, #16]
 8001326:	9b07      	ldr	r3, [sp, #28]
 8001328:	0021      	movs	r1, r4
 800132a:	9300      	str	r3, [sp, #0]
 800132c:	9805      	ldr	r0, [sp, #20]
 800132e:	9b06      	ldr	r3, [sp, #24]
 8001330:	aa09      	add	r2, sp, #36	@ 0x24
 8001332:	f7ff fef7 	bl	8001124 <_printf_common>
 8001336:	3001      	adds	r0, #1
 8001338:	d148      	bne.n	80013cc <_printf_i+0x1c8>
 800133a:	2001      	movs	r0, #1
 800133c:	4240      	negs	r0, r0
 800133e:	b00b      	add	sp, #44	@ 0x2c
 8001340:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001342:	2220      	movs	r2, #32
 8001344:	6809      	ldr	r1, [r1, #0]
 8001346:	430a      	orrs	r2, r1
 8001348:	6022      	str	r2, [r4, #0]
 800134a:	2278      	movs	r2, #120	@ 0x78
 800134c:	4932      	ldr	r1, [pc, #200]	@ (8001418 <_printf_i+0x214>)
 800134e:	9104      	str	r1, [sp, #16]
 8001350:	0021      	movs	r1, r4
 8001352:	3145      	adds	r1, #69	@ 0x45
 8001354:	700a      	strb	r2, [r1, #0]
 8001356:	6819      	ldr	r1, [r3, #0]
 8001358:	6822      	ldr	r2, [r4, #0]
 800135a:	c940      	ldmia	r1!, {r6}
 800135c:	0610      	lsls	r0, r2, #24
 800135e:	d402      	bmi.n	8001366 <_printf_i+0x162>
 8001360:	0650      	lsls	r0, r2, #25
 8001362:	d500      	bpl.n	8001366 <_printf_i+0x162>
 8001364:	b2b6      	uxth	r6, r6
 8001366:	6019      	str	r1, [r3, #0]
 8001368:	07d3      	lsls	r3, r2, #31
 800136a:	d502      	bpl.n	8001372 <_printf_i+0x16e>
 800136c:	2320      	movs	r3, #32
 800136e:	4313      	orrs	r3, r2
 8001370:	6023      	str	r3, [r4, #0]
 8001372:	2e00      	cmp	r6, #0
 8001374:	d001      	beq.n	800137a <_printf_i+0x176>
 8001376:	2710      	movs	r7, #16
 8001378:	e7aa      	b.n	80012d0 <_printf_i+0xcc>
 800137a:	2220      	movs	r2, #32
 800137c:	6823      	ldr	r3, [r4, #0]
 800137e:	4393      	bics	r3, r2
 8001380:	6023      	str	r3, [r4, #0]
 8001382:	e7f8      	b.n	8001376 <_printf_i+0x172>
 8001384:	681a      	ldr	r2, [r3, #0]
 8001386:	680d      	ldr	r5, [r1, #0]
 8001388:	1d10      	adds	r0, r2, #4
 800138a:	6949      	ldr	r1, [r1, #20]
 800138c:	6018      	str	r0, [r3, #0]
 800138e:	6813      	ldr	r3, [r2, #0]
 8001390:	062e      	lsls	r6, r5, #24
 8001392:	d501      	bpl.n	8001398 <_printf_i+0x194>
 8001394:	6019      	str	r1, [r3, #0]
 8001396:	e002      	b.n	800139e <_printf_i+0x19a>
 8001398:	066d      	lsls	r5, r5, #25
 800139a:	d5fb      	bpl.n	8001394 <_printf_i+0x190>
 800139c:	8019      	strh	r1, [r3, #0]
 800139e:	2300      	movs	r3, #0
 80013a0:	9d03      	ldr	r5, [sp, #12]
 80013a2:	6123      	str	r3, [r4, #16]
 80013a4:	e7bf      	b.n	8001326 <_printf_i+0x122>
 80013a6:	681a      	ldr	r2, [r3, #0]
 80013a8:	1d11      	adds	r1, r2, #4
 80013aa:	6019      	str	r1, [r3, #0]
 80013ac:	6815      	ldr	r5, [r2, #0]
 80013ae:	2100      	movs	r1, #0
 80013b0:	0028      	movs	r0, r5
 80013b2:	6862      	ldr	r2, [r4, #4]
 80013b4:	f000 f986 	bl	80016c4 <memchr>
 80013b8:	2800      	cmp	r0, #0
 80013ba:	d001      	beq.n	80013c0 <_printf_i+0x1bc>
 80013bc:	1b40      	subs	r0, r0, r5
 80013be:	6060      	str	r0, [r4, #4]
 80013c0:	6863      	ldr	r3, [r4, #4]
 80013c2:	6123      	str	r3, [r4, #16]
 80013c4:	2300      	movs	r3, #0
 80013c6:	9a03      	ldr	r2, [sp, #12]
 80013c8:	7013      	strb	r3, [r2, #0]
 80013ca:	e7ac      	b.n	8001326 <_printf_i+0x122>
 80013cc:	002a      	movs	r2, r5
 80013ce:	6923      	ldr	r3, [r4, #16]
 80013d0:	9906      	ldr	r1, [sp, #24]
 80013d2:	9805      	ldr	r0, [sp, #20]
 80013d4:	9d07      	ldr	r5, [sp, #28]
 80013d6:	47a8      	blx	r5
 80013d8:	3001      	adds	r0, #1
 80013da:	d0ae      	beq.n	800133a <_printf_i+0x136>
 80013dc:	6823      	ldr	r3, [r4, #0]
 80013de:	079b      	lsls	r3, r3, #30
 80013e0:	d415      	bmi.n	800140e <_printf_i+0x20a>
 80013e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80013e4:	68e0      	ldr	r0, [r4, #12]
 80013e6:	4298      	cmp	r0, r3
 80013e8:	daa9      	bge.n	800133e <_printf_i+0x13a>
 80013ea:	0018      	movs	r0, r3
 80013ec:	e7a7      	b.n	800133e <_printf_i+0x13a>
 80013ee:	0022      	movs	r2, r4
 80013f0:	2301      	movs	r3, #1
 80013f2:	9906      	ldr	r1, [sp, #24]
 80013f4:	9805      	ldr	r0, [sp, #20]
 80013f6:	9e07      	ldr	r6, [sp, #28]
 80013f8:	3219      	adds	r2, #25
 80013fa:	47b0      	blx	r6
 80013fc:	3001      	adds	r0, #1
 80013fe:	d09c      	beq.n	800133a <_printf_i+0x136>
 8001400:	3501      	adds	r5, #1
 8001402:	68e3      	ldr	r3, [r4, #12]
 8001404:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8001406:	1a9b      	subs	r3, r3, r2
 8001408:	42ab      	cmp	r3, r5
 800140a:	dcf0      	bgt.n	80013ee <_printf_i+0x1ea>
 800140c:	e7e9      	b.n	80013e2 <_printf_i+0x1de>
 800140e:	2500      	movs	r5, #0
 8001410:	e7f7      	b.n	8001402 <_printf_i+0x1fe>
 8001412:	46c0      	nop			@ (mov r8, r8)
 8001414:	08001710 	.word	0x08001710
 8001418:	08001721 	.word	0x08001721

0800141c <__sflush_r>:
 800141c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800141e:	220c      	movs	r2, #12
 8001420:	5e8b      	ldrsh	r3, [r1, r2]
 8001422:	0005      	movs	r5, r0
 8001424:	000c      	movs	r4, r1
 8001426:	071a      	lsls	r2, r3, #28
 8001428:	d456      	bmi.n	80014d8 <__sflush_r+0xbc>
 800142a:	684a      	ldr	r2, [r1, #4]
 800142c:	2a00      	cmp	r2, #0
 800142e:	dc02      	bgt.n	8001436 <__sflush_r+0x1a>
 8001430:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 8001432:	2a00      	cmp	r2, #0
 8001434:	dd4e      	ble.n	80014d4 <__sflush_r+0xb8>
 8001436:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8001438:	2f00      	cmp	r7, #0
 800143a:	d04b      	beq.n	80014d4 <__sflush_r+0xb8>
 800143c:	2200      	movs	r2, #0
 800143e:	2080      	movs	r0, #128	@ 0x80
 8001440:	682e      	ldr	r6, [r5, #0]
 8001442:	602a      	str	r2, [r5, #0]
 8001444:	001a      	movs	r2, r3
 8001446:	0140      	lsls	r0, r0, #5
 8001448:	6a21      	ldr	r1, [r4, #32]
 800144a:	4002      	ands	r2, r0
 800144c:	4203      	tst	r3, r0
 800144e:	d033      	beq.n	80014b8 <__sflush_r+0x9c>
 8001450:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001452:	89a3      	ldrh	r3, [r4, #12]
 8001454:	075b      	lsls	r3, r3, #29
 8001456:	d506      	bpl.n	8001466 <__sflush_r+0x4a>
 8001458:	6863      	ldr	r3, [r4, #4]
 800145a:	1ad2      	subs	r2, r2, r3
 800145c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800145e:	2b00      	cmp	r3, #0
 8001460:	d001      	beq.n	8001466 <__sflush_r+0x4a>
 8001462:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001464:	1ad2      	subs	r2, r2, r3
 8001466:	2300      	movs	r3, #0
 8001468:	0028      	movs	r0, r5
 800146a:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800146c:	6a21      	ldr	r1, [r4, #32]
 800146e:	47b8      	blx	r7
 8001470:	89a2      	ldrh	r2, [r4, #12]
 8001472:	1c43      	adds	r3, r0, #1
 8001474:	d106      	bne.n	8001484 <__sflush_r+0x68>
 8001476:	6829      	ldr	r1, [r5, #0]
 8001478:	291d      	cmp	r1, #29
 800147a:	d846      	bhi.n	800150a <__sflush_r+0xee>
 800147c:	4b29      	ldr	r3, [pc, #164]	@ (8001524 <__sflush_r+0x108>)
 800147e:	40cb      	lsrs	r3, r1
 8001480:	07db      	lsls	r3, r3, #31
 8001482:	d542      	bpl.n	800150a <__sflush_r+0xee>
 8001484:	2300      	movs	r3, #0
 8001486:	6063      	str	r3, [r4, #4]
 8001488:	6923      	ldr	r3, [r4, #16]
 800148a:	6023      	str	r3, [r4, #0]
 800148c:	04d2      	lsls	r2, r2, #19
 800148e:	d505      	bpl.n	800149c <__sflush_r+0x80>
 8001490:	1c43      	adds	r3, r0, #1
 8001492:	d102      	bne.n	800149a <__sflush_r+0x7e>
 8001494:	682b      	ldr	r3, [r5, #0]
 8001496:	2b00      	cmp	r3, #0
 8001498:	d100      	bne.n	800149c <__sflush_r+0x80>
 800149a:	6560      	str	r0, [r4, #84]	@ 0x54
 800149c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800149e:	602e      	str	r6, [r5, #0]
 80014a0:	2900      	cmp	r1, #0
 80014a2:	d017      	beq.n	80014d4 <__sflush_r+0xb8>
 80014a4:	0023      	movs	r3, r4
 80014a6:	3344      	adds	r3, #68	@ 0x44
 80014a8:	4299      	cmp	r1, r3
 80014aa:	d002      	beq.n	80014b2 <__sflush_r+0x96>
 80014ac:	0028      	movs	r0, r5
 80014ae:	f7ff fbf9 	bl	8000ca4 <_free_r>
 80014b2:	2300      	movs	r3, #0
 80014b4:	6363      	str	r3, [r4, #52]	@ 0x34
 80014b6:	e00d      	b.n	80014d4 <__sflush_r+0xb8>
 80014b8:	2301      	movs	r3, #1
 80014ba:	0028      	movs	r0, r5
 80014bc:	47b8      	blx	r7
 80014be:	0002      	movs	r2, r0
 80014c0:	1c43      	adds	r3, r0, #1
 80014c2:	d1c6      	bne.n	8001452 <__sflush_r+0x36>
 80014c4:	682b      	ldr	r3, [r5, #0]
 80014c6:	2b00      	cmp	r3, #0
 80014c8:	d0c3      	beq.n	8001452 <__sflush_r+0x36>
 80014ca:	2b1d      	cmp	r3, #29
 80014cc:	d001      	beq.n	80014d2 <__sflush_r+0xb6>
 80014ce:	2b16      	cmp	r3, #22
 80014d0:	d11a      	bne.n	8001508 <__sflush_r+0xec>
 80014d2:	602e      	str	r6, [r5, #0]
 80014d4:	2000      	movs	r0, #0
 80014d6:	e01e      	b.n	8001516 <__sflush_r+0xfa>
 80014d8:	690e      	ldr	r6, [r1, #16]
 80014da:	2e00      	cmp	r6, #0
 80014dc:	d0fa      	beq.n	80014d4 <__sflush_r+0xb8>
 80014de:	680f      	ldr	r7, [r1, #0]
 80014e0:	600e      	str	r6, [r1, #0]
 80014e2:	1bba      	subs	r2, r7, r6
 80014e4:	9201      	str	r2, [sp, #4]
 80014e6:	2200      	movs	r2, #0
 80014e8:	079b      	lsls	r3, r3, #30
 80014ea:	d100      	bne.n	80014ee <__sflush_r+0xd2>
 80014ec:	694a      	ldr	r2, [r1, #20]
 80014ee:	60a2      	str	r2, [r4, #8]
 80014f0:	9b01      	ldr	r3, [sp, #4]
 80014f2:	2b00      	cmp	r3, #0
 80014f4:	ddee      	ble.n	80014d4 <__sflush_r+0xb8>
 80014f6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80014f8:	0032      	movs	r2, r6
 80014fa:	001f      	movs	r7, r3
 80014fc:	0028      	movs	r0, r5
 80014fe:	9b01      	ldr	r3, [sp, #4]
 8001500:	6a21      	ldr	r1, [r4, #32]
 8001502:	47b8      	blx	r7
 8001504:	2800      	cmp	r0, #0
 8001506:	dc07      	bgt.n	8001518 <__sflush_r+0xfc>
 8001508:	89a2      	ldrh	r2, [r4, #12]
 800150a:	2340      	movs	r3, #64	@ 0x40
 800150c:	2001      	movs	r0, #1
 800150e:	4313      	orrs	r3, r2
 8001510:	b21b      	sxth	r3, r3
 8001512:	81a3      	strh	r3, [r4, #12]
 8001514:	4240      	negs	r0, r0
 8001516:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8001518:	9b01      	ldr	r3, [sp, #4]
 800151a:	1836      	adds	r6, r6, r0
 800151c:	1a1b      	subs	r3, r3, r0
 800151e:	9301      	str	r3, [sp, #4]
 8001520:	e7e6      	b.n	80014f0 <__sflush_r+0xd4>
 8001522:	46c0      	nop			@ (mov r8, r8)
 8001524:	20400001 	.word	0x20400001

08001528 <_fflush_r>:
 8001528:	690b      	ldr	r3, [r1, #16]
 800152a:	b570      	push	{r4, r5, r6, lr}
 800152c:	0005      	movs	r5, r0
 800152e:	000c      	movs	r4, r1
 8001530:	2b00      	cmp	r3, #0
 8001532:	d102      	bne.n	800153a <_fflush_r+0x12>
 8001534:	2500      	movs	r5, #0
 8001536:	0028      	movs	r0, r5
 8001538:	bd70      	pop	{r4, r5, r6, pc}
 800153a:	2800      	cmp	r0, #0
 800153c:	d004      	beq.n	8001548 <_fflush_r+0x20>
 800153e:	6a03      	ldr	r3, [r0, #32]
 8001540:	2b00      	cmp	r3, #0
 8001542:	d101      	bne.n	8001548 <_fflush_r+0x20>
 8001544:	f7ff f99a 	bl	800087c <__sinit>
 8001548:	220c      	movs	r2, #12
 800154a:	5ea3      	ldrsh	r3, [r4, r2]
 800154c:	2b00      	cmp	r3, #0
 800154e:	d0f1      	beq.n	8001534 <_fflush_r+0xc>
 8001550:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001552:	07d2      	lsls	r2, r2, #31
 8001554:	d404      	bmi.n	8001560 <_fflush_r+0x38>
 8001556:	059b      	lsls	r3, r3, #22
 8001558:	d402      	bmi.n	8001560 <_fflush_r+0x38>
 800155a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800155c:	f7ff fb9f 	bl	8000c9e <__retarget_lock_acquire_recursive>
 8001560:	0028      	movs	r0, r5
 8001562:	0021      	movs	r1, r4
 8001564:	f7ff ff5a 	bl	800141c <__sflush_r>
 8001568:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800156a:	0005      	movs	r5, r0
 800156c:	07db      	lsls	r3, r3, #31
 800156e:	d4e2      	bmi.n	8001536 <_fflush_r+0xe>
 8001570:	89a3      	ldrh	r3, [r4, #12]
 8001572:	059b      	lsls	r3, r3, #22
 8001574:	d4df      	bmi.n	8001536 <_fflush_r+0xe>
 8001576:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001578:	f7ff fb92 	bl	8000ca0 <__retarget_lock_release_recursive>
 800157c:	e7db      	b.n	8001536 <_fflush_r+0xe>
	...

08001580 <__swhatbuf_r>:
 8001580:	b570      	push	{r4, r5, r6, lr}
 8001582:	000e      	movs	r6, r1
 8001584:	001d      	movs	r5, r3
 8001586:	230e      	movs	r3, #14
 8001588:	5ec9      	ldrsh	r1, [r1, r3]
 800158a:	0014      	movs	r4, r2
 800158c:	b096      	sub	sp, #88	@ 0x58
 800158e:	2900      	cmp	r1, #0
 8001590:	da0c      	bge.n	80015ac <__swhatbuf_r+0x2c>
 8001592:	89b2      	ldrh	r2, [r6, #12]
 8001594:	2380      	movs	r3, #128	@ 0x80
 8001596:	0011      	movs	r1, r2
 8001598:	4019      	ands	r1, r3
 800159a:	421a      	tst	r2, r3
 800159c:	d114      	bne.n	80015c8 <__swhatbuf_r+0x48>
 800159e:	2380      	movs	r3, #128	@ 0x80
 80015a0:	00db      	lsls	r3, r3, #3
 80015a2:	2000      	movs	r0, #0
 80015a4:	6029      	str	r1, [r5, #0]
 80015a6:	6023      	str	r3, [r4, #0]
 80015a8:	b016      	add	sp, #88	@ 0x58
 80015aa:	bd70      	pop	{r4, r5, r6, pc}
 80015ac:	466a      	mov	r2, sp
 80015ae:	f000 f853 	bl	8001658 <_fstat_r>
 80015b2:	2800      	cmp	r0, #0
 80015b4:	dbed      	blt.n	8001592 <__swhatbuf_r+0x12>
 80015b6:	23f0      	movs	r3, #240	@ 0xf0
 80015b8:	9901      	ldr	r1, [sp, #4]
 80015ba:	021b      	lsls	r3, r3, #8
 80015bc:	4019      	ands	r1, r3
 80015be:	4b04      	ldr	r3, [pc, #16]	@ (80015d0 <__swhatbuf_r+0x50>)
 80015c0:	18c9      	adds	r1, r1, r3
 80015c2:	424b      	negs	r3, r1
 80015c4:	4159      	adcs	r1, r3
 80015c6:	e7ea      	b.n	800159e <__swhatbuf_r+0x1e>
 80015c8:	2100      	movs	r1, #0
 80015ca:	2340      	movs	r3, #64	@ 0x40
 80015cc:	e7e9      	b.n	80015a2 <__swhatbuf_r+0x22>
 80015ce:	46c0      	nop			@ (mov r8, r8)
 80015d0:	ffffe000 	.word	0xffffe000

080015d4 <__smakebuf_r>:
 80015d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80015d6:	2602      	movs	r6, #2
 80015d8:	898b      	ldrh	r3, [r1, #12]
 80015da:	0005      	movs	r5, r0
 80015dc:	000c      	movs	r4, r1
 80015de:	b085      	sub	sp, #20
 80015e0:	4233      	tst	r3, r6
 80015e2:	d007      	beq.n	80015f4 <__smakebuf_r+0x20>
 80015e4:	0023      	movs	r3, r4
 80015e6:	3347      	adds	r3, #71	@ 0x47
 80015e8:	6023      	str	r3, [r4, #0]
 80015ea:	6123      	str	r3, [r4, #16]
 80015ec:	2301      	movs	r3, #1
 80015ee:	6163      	str	r3, [r4, #20]
 80015f0:	b005      	add	sp, #20
 80015f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015f4:	ab03      	add	r3, sp, #12
 80015f6:	aa02      	add	r2, sp, #8
 80015f8:	f7ff ffc2 	bl	8001580 <__swhatbuf_r>
 80015fc:	9f02      	ldr	r7, [sp, #8]
 80015fe:	9001      	str	r0, [sp, #4]
 8001600:	0039      	movs	r1, r7
 8001602:	0028      	movs	r0, r5
 8001604:	f7ff fbba 	bl	8000d7c <_malloc_r>
 8001608:	2800      	cmp	r0, #0
 800160a:	d108      	bne.n	800161e <__smakebuf_r+0x4a>
 800160c:	220c      	movs	r2, #12
 800160e:	5ea3      	ldrsh	r3, [r4, r2]
 8001610:	059a      	lsls	r2, r3, #22
 8001612:	d4ed      	bmi.n	80015f0 <__smakebuf_r+0x1c>
 8001614:	2203      	movs	r2, #3
 8001616:	4393      	bics	r3, r2
 8001618:	431e      	orrs	r6, r3
 800161a:	81a6      	strh	r6, [r4, #12]
 800161c:	e7e2      	b.n	80015e4 <__smakebuf_r+0x10>
 800161e:	2380      	movs	r3, #128	@ 0x80
 8001620:	89a2      	ldrh	r2, [r4, #12]
 8001622:	6020      	str	r0, [r4, #0]
 8001624:	4313      	orrs	r3, r2
 8001626:	81a3      	strh	r3, [r4, #12]
 8001628:	9b03      	ldr	r3, [sp, #12]
 800162a:	6120      	str	r0, [r4, #16]
 800162c:	6167      	str	r7, [r4, #20]
 800162e:	2b00      	cmp	r3, #0
 8001630:	d00c      	beq.n	800164c <__smakebuf_r+0x78>
 8001632:	0028      	movs	r0, r5
 8001634:	230e      	movs	r3, #14
 8001636:	5ee1      	ldrsh	r1, [r4, r3]
 8001638:	f000 f820 	bl	800167c <_isatty_r>
 800163c:	2800      	cmp	r0, #0
 800163e:	d005      	beq.n	800164c <__smakebuf_r+0x78>
 8001640:	2303      	movs	r3, #3
 8001642:	89a2      	ldrh	r2, [r4, #12]
 8001644:	439a      	bics	r2, r3
 8001646:	3b02      	subs	r3, #2
 8001648:	4313      	orrs	r3, r2
 800164a:	81a3      	strh	r3, [r4, #12]
 800164c:	89a3      	ldrh	r3, [r4, #12]
 800164e:	9a01      	ldr	r2, [sp, #4]
 8001650:	4313      	orrs	r3, r2
 8001652:	81a3      	strh	r3, [r4, #12]
 8001654:	e7cc      	b.n	80015f0 <__smakebuf_r+0x1c>
	...

08001658 <_fstat_r>:
 8001658:	2300      	movs	r3, #0
 800165a:	b570      	push	{r4, r5, r6, lr}
 800165c:	4d06      	ldr	r5, [pc, #24]	@ (8001678 <_fstat_r+0x20>)
 800165e:	0004      	movs	r4, r0
 8001660:	0008      	movs	r0, r1
 8001662:	0011      	movs	r1, r2
 8001664:	602b      	str	r3, [r5, #0]
 8001666:	f7fe fff6 	bl	8000656 <_fstat>
 800166a:	1c43      	adds	r3, r0, #1
 800166c:	d103      	bne.n	8001676 <_fstat_r+0x1e>
 800166e:	682b      	ldr	r3, [r5, #0]
 8001670:	2b00      	cmp	r3, #0
 8001672:	d000      	beq.n	8001676 <_fstat_r+0x1e>
 8001674:	6023      	str	r3, [r4, #0]
 8001676:	bd70      	pop	{r4, r5, r6, pc}
 8001678:	200002ec 	.word	0x200002ec

0800167c <_isatty_r>:
 800167c:	2300      	movs	r3, #0
 800167e:	b570      	push	{r4, r5, r6, lr}
 8001680:	4d06      	ldr	r5, [pc, #24]	@ (800169c <_isatty_r+0x20>)
 8001682:	0004      	movs	r4, r0
 8001684:	0008      	movs	r0, r1
 8001686:	602b      	str	r3, [r5, #0]
 8001688:	f7fe fff3 	bl	8000672 <_isatty>
 800168c:	1c43      	adds	r3, r0, #1
 800168e:	d103      	bne.n	8001698 <_isatty_r+0x1c>
 8001690:	682b      	ldr	r3, [r5, #0]
 8001692:	2b00      	cmp	r3, #0
 8001694:	d000      	beq.n	8001698 <_isatty_r+0x1c>
 8001696:	6023      	str	r3, [r4, #0]
 8001698:	bd70      	pop	{r4, r5, r6, pc}
 800169a:	46c0      	nop			@ (mov r8, r8)
 800169c:	200002ec 	.word	0x200002ec

080016a0 <_sbrk_r>:
 80016a0:	2300      	movs	r3, #0
 80016a2:	b570      	push	{r4, r5, r6, lr}
 80016a4:	4d06      	ldr	r5, [pc, #24]	@ (80016c0 <_sbrk_r+0x20>)
 80016a6:	0004      	movs	r4, r0
 80016a8:	0008      	movs	r0, r1
 80016aa:	602b      	str	r3, [r5, #0]
 80016ac:	f7fe fff6 	bl	800069c <_sbrk>
 80016b0:	1c43      	adds	r3, r0, #1
 80016b2:	d103      	bne.n	80016bc <_sbrk_r+0x1c>
 80016b4:	682b      	ldr	r3, [r5, #0]
 80016b6:	2b00      	cmp	r3, #0
 80016b8:	d000      	beq.n	80016bc <_sbrk_r+0x1c>
 80016ba:	6023      	str	r3, [r4, #0]
 80016bc:	bd70      	pop	{r4, r5, r6, pc}
 80016be:	46c0      	nop			@ (mov r8, r8)
 80016c0:	200002ec 	.word	0x200002ec

080016c4 <memchr>:
 80016c4:	b2c9      	uxtb	r1, r1
 80016c6:	1882      	adds	r2, r0, r2
 80016c8:	4290      	cmp	r0, r2
 80016ca:	d101      	bne.n	80016d0 <memchr+0xc>
 80016cc:	2000      	movs	r0, #0
 80016ce:	4770      	bx	lr
 80016d0:	7803      	ldrb	r3, [r0, #0]
 80016d2:	428b      	cmp	r3, r1
 80016d4:	d0fb      	beq.n	80016ce <memchr+0xa>
 80016d6:	3001      	adds	r0, #1
 80016d8:	e7f6      	b.n	80016c8 <memchr+0x4>
	...

080016dc <_init>:
 80016dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80016de:	46c0      	nop			@ (mov r8, r8)
 80016e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80016e2:	bc08      	pop	{r3}
 80016e4:	469e      	mov	lr, r3
 80016e6:	4770      	bx	lr

080016e8 <_fini>:
 80016e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80016ea:	46c0      	nop			@ (mov r8, r8)
 80016ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80016ee:	bc08      	pop	{r3}
 80016f0:	469e      	mov	lr, r3
 80016f2:	4770      	bx	lr
